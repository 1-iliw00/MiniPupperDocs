# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, MangDang Technology Co., Limited
# This file is distributed under the same license as the Mini Pupper
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mini Pupper \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-20 09:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../guide/Assembly.rst:2
msgid "Assembly"
msgstr "組み立て"

#: ../../guide/Assembly.rst:5 ../../guide/Examples.rst:7
#: ../../guide/Features.rst:5 ../../guide/HowToOrder.rst:6
#: ../../guide/MachineLearning.rst:6 ../../guide/Navigation.rst:6
#: ../../guide/QuickStartGuide.rst:6 ../../guide/SLAM.rst:6
#: ../../guide/Simulation.rst:5 ../../guide/Software.rst:7
msgid "Contents"
msgstr "コンテンツ"

#: ../../guide/Assembly.rst:7
msgid ""
"This is the video clip for the pre-assembled leg kit, please refer to the"
" below sections for more detailed steps."
msgstr "下記の動画では事前に組み込み済みの足を用いたキットをロボットの本体出来上がりまでの簡単な説明となります。"

#: ../../guide/Assembly.rst:17
msgid "0. Update change points after April 15 2022"
msgstr "2022年4月15日以降の変更点"

#: ../../guide/Assembly.rst:19
msgid "Updated the body and hip parts from 3D printed to mold."
msgstr "胴体と臀部のパーツを3Dプリントから金型に更新しました。"

#: ../../guide/Assembly.rst:20
msgid ""
"Re-designed and unified the original four hip parts into one for mold, "
"for the detailed info, please refer to the mechanical design section."
msgstr "この金型は4つの臀部パーツを1つに統合したもので、詳細については機械設計の部分をご覧ください。"

#: ../../guide/Assembly.rst:21
msgid ""
"If you get your Mini Pupper kit after April 15 2022, it will be easier to"
" assemble."
msgstr "2022年4月15日以降に『ミニぷぱ』キットを入手された方は、より簡単に組み立てることができます。"

#: ../../guide/Assembly.rst:22
msgid ""
"If you have 3D printer and still hope to use the previous 3D printed "
"design, that's OK."
msgstr "3Dプリンターをお持ちの方で、以前の3Dプリントしたパーツを引き続き使ってもOKです。"

#: ../../guide/Assembly.rst:26
msgid ""
"1. Write the pre-built image into microSD"
msgstr "1.イメージを焼きこむ"

#: ../../guide/Assembly.rst:29 ../../guide/Assembly.rst:144
#: ../../guide/Software.rst:13
msgid "Tools"
msgstr "ツール"

#: ../../guide/Assembly.rst:30 ../../guide/Assembly.rst:145
msgid ""
"In addition to the tools included in the kit, the following items are "
"required for assembly."
msgstr "キットに同梱されている工具の他に、組み立てには以下の物が必要です。"

#: ../../guide/Assembly.rst:32 ../../guide/Software.rst:16
msgid "USB keyboard"
msgstr "USB キーボード"

#: ../../guide/Assembly.rst:33 ../../guide/Software.rst:17
msgid "USB mouse"
msgstr "USB マウス"

#: ../../guide/Assembly.rst:34
msgid "PC"
msgstr "PC"

#: ../../guide/Assembly.rst:35
msgid "microSD card reader"
msgstr "microSDカードリーダ "

#: ../../guide/Assembly.rst:36 ../../guide/Examples.rst:27
msgid "HDMI Display"
msgstr "HDMI ディスプレイ "

#: ../../guide/Assembly.rst:37 ../../guide/Examples.rst:28
msgid "micro HDMI cable"
msgstr "micro HDMI ケーブル"

#: ../../guide/Assembly.rst:38
msgid "USB charger"
msgstr "USB充電器"

#: ../../guide/Assembly.rst:42
msgid "Step 1.1 Charging the battery"
msgstr "Step 1.1充電"

#: ../../guide/Assembly.rst:44
msgid ""
"The battery is charged via USB, see picture for USB socket, and can also "
"be charged while attached to the Mini Pupper body."
msgstr "準備としてバッテリーをUSBで充電しておきます。USBの差込口は写真を参照。ミニぷぱに取り付けたままでも充電できます。"

#: ../../guide/Assembly.rst:46
msgid ""
"※ LED light: Green means there is enough power, and Red means you need to"
" charge it."
msgstr "LEDライト：緑は十分な力があることを表し、赤は充電必要を表しています。"

#: ../../guide/Assembly.rst:48
msgid ""
"※ We recommend 5V/1A adapter, if you use 5V/2A adapter, the battery IC "
"will change it to 1A. It needs about 1 hour to charge 80% and the light "
"will become green, and an additional 1 hour to 100%, anyway, you can use "
"it when the light becomes green."
msgstr "5V/1Aアダプタの使用がお勧めです。5V/2Aのアダプタを使用している場合、バッテリーチャージャーICは自動的に電流を1Aに変更します。

バッテリーを80％まで充電するには約1時間かかり、フル充電にはまた約1時間かかりますが、LEDライトが緑に変わりますと、ご利用いただけます。"

#: ../../guide/Assembly.rst:54
msgid "Step 1.2 Download the image"
msgstr "Step 1.2 イメージファイルのダウンロード"

#: ../../guide/Assembly.rst:56
msgid "You can download latest image file via the below folder."
msgstr "最新のイメージファイルは下記のフォルダからダウンロードできます。"

#: ../../guide/Assembly.rst:58
msgid ""
"`MiniPupperRelease.from.MangDang <https://drive.google.com/drive/folders"
"/12FDFbZzO61Euh8pJI9oCxN-eLVm5zjyi?usp=sharing>`_"
msgstr "`MiniPupperRelease.from.MangDang <https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-eLVm5zjyi?usp=sharing>`_"

#: ../../guide/Assembly.rst:61
msgid ""
"For the V1 verison Custom circuit board, the image file looks like "
"xxx_MiniPupper_PS4_Ubuntu_xxx.img.zip."
msgstr "V1カスタム回路基板の場合、イメージファイルは xxx_MiniPupper_PS4_Ubuntu_xxx.img.zipになります。"

#: ../../guide/Assembly.rst:67
msgid ""
"For the V2 version Custom circuit board, the image file looks like "
"xxx_MiniPupper_V2_PS4_Ubuntu_xxx.img.zip."
msgstr "V2カスタム回路基板の場合、イメージファイルは xxx_MiniPupper_V2_PS4_Ubuntu_xxx.img.zip になります。"

#: ../../guide/Assembly.rst:72
msgid ""
"※ “xxx_MiniPupper_V1&V2_Controller_Ubuntu_22.04.img” means the image "
"compatable to V1 and V2 custom board. If you want to develop your own "
"features based on our new image file, we recommand you to use our lastest"
" custom board."
msgstr "※ “xxx_MiniPupper_V1&V2_Controller_Ubuntu_22.04.img”はV1、V2カスタムボードに対応したイメージです。新しいイメージファイルをベースに独自の機能を開発したい場合は、最新のカスタムボードを使用することをお勧めします。"

#: ../../guide/Assembly.rst:74
msgid ""
"※ \"xxx.MiniPupper_ROS&OpenCV_Ubuntu20.04.03.img\" is the image file for "
"the Ubuntu + ROS + OpenCV version for SLAM & Navigation & AI."
msgstr "「xxx.MiniPupper_V2_ROS&OpenCV_Ubuntu20.04.03.img.zip」はSLAM＆Navigation&AI のUbuntu + ROS + OpenCV バージョンのイメージファイルです。"

#: ../../guide/Assembly.rst:78 
msgid "Step 1.3 Write the image into microSD card"
msgstr "Step 1.3 フラッシュに焼きこむ"

#: ../../guide/Assembly.rst:80
msgid ""
"Insert the microSD card into your PC's SD card reader and write the "
"image. We recommend the image creation tool balenaEtcher or "
"Win32DiskImager as it is easy and reliable. Please refer to the official "
"manual and below link. It may take a while to complete."
msgstr "PCのSDカードリーダにmicroSDカードを入れて、イメージを書き込みます。イメージ作成ツール balenaEtcherが簡単かつ確実なのでおすすめです。オフィシャルマニュアルやリンク先を参考に書き込みましょう。完了までかなり時間がかかります。"

#: ../../guide/Assembly.rst:82
msgid ""
"※ Reference Link: `Download Etcher – Flash OS images to USB drives & SD "
"cards <https://etcherpc.com/?usp=sharing>`_"
msgstr "参考：`簡単な 3 ステップで使えるブートUSB 作成ツール！「balenaEtcher」 <https://www.gigafree.net/system/os/Etcher.html?usp=sharing>`_ "

#: ../../guide/Assembly.rst:85
msgid "Remove the SD card from the PC and insert it into the Raspberry pi."
msgstr "PCからSDカードを抜いて、ラズパイに挿す。"

#: ../../guide/Assembly.rst:92
msgid "2. Position of the screws"
msgstr "2. ネジの配置"

#: ../../guide/Assembly.rst:94
msgid "The pictures show the position of the screws briefly."
msgstr "写真はネジの位置を簡単に示しています。"

#: ../../guide/Assembly.rst:108 ../../guide/Assembly.rst:120
msgid ""
"(The up pictures are before April 15 2022 version, the below pictures are"
" after April 15 2022 version)"
msgstr "(上の写真は2022年4月15日以前のバージョンで、下の写真は2022年4月15日以降のバージョンです。)"

#: ../../guide/Assembly.rst:133
msgid "3. Legs Assembly"
msgstr "3. 脚の組み立て"

#: ../../guide/Assembly.rst:134 ../../guide/Assembly.rst:345
#: ../../guide/Assembly.rst:644
msgid "Please refer to the below video clip."
msgstr "以下の動画をご参照ください。"

#: ../../guide/Assembly.rst:147
msgid "Loctite"
msgstr "ロックタイト"

#: ../../guide/Assembly.rst:149
msgid ""
"※ We don't recommand new users to use the Loctite at first, you can use "
"it after you have much background."
msgstr "ロックタイトを初めて使用される方には、あまりお勧めできませんが、ある程度経験を積んでからご使用ください。"

#: ../../guide/Assembly.rst:151
msgid ""
"※ Loctite prevents the nut from loosening, but it is not essential, as it"
" can be tightened only when looseness is noticed."
msgstr "ロックタイトはナットの緩みを防止しますが、緩みに気づいたときに締めれば良いので必須ではありません。"

#: ../../guide/Assembly.rst:154
msgid "Bolt to use"
msgstr "使用するボルト"

#: ../../guide/Assembly.rst:155
msgid "M2x5mm        2x4=8   ①+②, ⑤+⑥"
msgstr "M2x5mm        2x4=8   ①+②, ⑤+⑥"

#: ../../guide/Assembly.rst:156
msgid "M2x8mm        3x4=12  ②+③, ④+⑦, ③+④"
msgstr "M2x8mm        3x4=12  ②+③, ④+⑦, ③+④"

#: ../../guide/Assembly.rst:157
msgid "M2x12mm       1x4=4   ⑤+⑦"
msgstr "M2x12mm       1x4=4   ⑤+⑦"

#: ../../guide/Assembly.rst:158
msgid "M2x14mm       1x4=4   ③+⑤"
msgstr "M2x14mm       1x4=4   ③+⑤"

#: ../../guide/Assembly.rst:161
msgid "Step 3.1 Single leg"
msgstr "Step 3.1 片脚"

#: ../../guide/Assembly.rst:163
msgid ""
"Assemble the four legs. The front and back of the right side are the "
"same, and so are the front and back of the left side. Show you how to "
"assemble the right side."
msgstr "脚を組み立てるとき、左側は前後セットで同じ形の足２つ、右側も同様で、併せて足を４コ組み立てます。下記は右側の前後セットを例に詳しく説明します。"

#: ../../guide/Assembly.rst:165
msgid "Video Instructions, please refer to the link https://youtu.be/Ut7UnS3CTZs"
msgstr "説明動画は下記のリンクをご参照ください。https://youtu.be/Ut7UnS3CTZs "

#: ../../guide/Assembly.rst:168
msgid "The parts are numbered as follows to explain."
msgstr "説明の便宜上、以下のようにパーツに番号を振りました。"

#: ../../guide/Assembly.rst:174
msgid "Assemble ① and ②"
msgstr "①と②の組み立て"

#: ../../guide/Assembly.rst:176
msgid ""
"Use one M2x5mm screw.The screw is inserted from the bottom of ② upwards "
"and tightened by inserting them into the screw holes in ①. Be careful "
"about the sides of ②."
msgstr "M2x5mm のボルトを1つ使用します。ボルトは②の下から上に挿し、①の穴に挿し込んで締めます。②の表裏の向きに気をつけましょう。"

#: ../../guide/Assembly.rst:178
msgid ""
"The two ballbearings in ② should be inserted all the way in and the end "
"should be slightly visible as shown in the picture below. Tap the ball "
"bearing and press it in without gaps."
msgstr "②のボールベアリング2個は奥まで挿し込み、下記の写真のように先が少し見える状態になっている必要があります。叩くなどして隙間をなくせば大丈夫です。"

#: ../../guide/Assembly.rst:193
msgid "Assemble ② and ③"
msgstr "②と③の組み立て"

#: ../../guide/Assembly.rst:195
msgid ""
"Use an M2x8mm screw and an M2 locknut. Insert the screw from the bottom "
"to the top of ③, pass through ② and tighten with the nut. It is important"
" to pay attention to the orientation of ③. Look carefully at the position"
" of the hole in the middle."
msgstr "M2x8mm のボルトを1つと M2 Locknutを使用します。ボルトを③の下から上に挿し、②を通し、ナットで締めます。③の部品の向きには気をつける必要があります。真ん中の穴の位置を良く見ましょう。"

#: ../../guide/Assembly.rst:207
msgid "Adjustment of the length of ④"
msgstr "④の長さの調整"

#: ../../guide/Assembly.rst:209
msgid ""
"The length of ④ must match the length of ⑤. When adjusting the length, it"
" is easier to use two long screws to make sure that the lengths match. "
"Once the lengths have been adjusted, take apart all."
msgstr "④の長さが⑤と一致している必要があります。長さを調整するとき、M2x14mmなどの長いボルトを2本使うと、長さが一致しているか確認しやすいです。長さの調整が完了したら、これらはすべてバラしましょう。"

#: ../../guide/Assembly.rst:217
msgid "If it's hard to twist, you can use two screwdrivers to assist."
msgstr "組み立て中回しづらい場合、ドライバーなどの工具を使ってまた試してみてください。"

#: ../../guide/Assembly.rst:223
msgid "Assemble ⑤ and ⑥"
msgstr "⑤と⑥の組み立て"

#: ../../guide/Assembly.rst:225
msgid ""
"Use one M2x5mm screw. Insert the screws into ⑤ first, insert them into "
"the holes of ⑥, and tighten them. The large hole in ⑥ should be facing "
"the surface."
msgstr ""
"下図のように、M2x5mm のネジを１コ図中の部品 ⑤ と部品 ⑥ のところに差し込み、"
"締め付ける。"

#: ../../guide/Assembly.rst:236
msgid "Assemble ⑤ and ⑦"
msgstr "部品 ⑤ と ⑦ を結合"

#: ../../guide/Assembly.rst:238
msgid ""
"Use an M2x12mm screw, an M2 locknut and two sets of ball bearings. Each "
"ball bearing is made up of three parts, the top and bottom parts with the"
" grooved side facing inwards. Insert a screw into a set of ball bearing. "
"Then insert the screw into the hole ⑦. Taking care to look at the warped "
"side of ⑦ to make sure it is facing the right way. Now screw in the "
"another set of ball bearing. Finally, insert screw into ⑤ and tighten it "
"with the nut."
msgstr "M2x12mmのボルトとM2 locknutとボールベアリング2組を使用します。ボールベアリングは3つの部品から成り立っており、上下の部品は溝がある方を内側に向けて、真ん中の部品をはさみます。まずボールベアリングにボルトを通します。次に⑦の穴にボルトを挿します。このとき⑦の反っている方向を見て、向きを間違えないように気をつけます。次にもう一つのボールベアリングをボルトに通します。最後に⑤をボルトに通してナットで締めます。"

#: ../../guide/Assembly.rst:257
msgid "Assemble ④ and ⑦"
msgstr "部品 ④ と ⑦ を結合"

#: ../../guide/Assembly.rst:259
msgid ""
"Use an M2x8mm screw and an M2 nut. Insert the screw into ⑦ and put ④ "
"through, then tighten it with the nut. The direction of the front and "
"back of ④ can be either."
msgstr "M2x8mmのボルトとM2ナットを使用します。⑦にボルトを挿し、④を通したら、ナットで締めます。④の表裏の向きはどちらでも大丈夫です。"

#: ../../guide/Assembly.rst:261 ../../guide/Assembly.rst:276
msgid "Left and right leg"
msgstr "左右セットの足"

#: ../../guide/Assembly.rst:272
msgid "Assemble ③ and ④"
msgstr "部品 ③ と ④ を結合"

#: ../../guide/Assembly.rst:274
msgid ""
"Use an M2x8mm screw and an M2 nut. Insert the screw into ③ and put ④ "
"through, then tighten it with the nut."
msgstr "M2x8mmのボルトとM2ナットを使用します。③にボルトを挿し、④を通したら、ナットで締めます。"

#: ../../guide/Assembly.rst:284
msgid "Assemble ③ and ⑤"
msgstr "部品 ③ と ⑤ を結合"

#: ../../guide/Assembly.rst:286
msgid ""
"Use M2x14mm screws and two sets of ball bearings. Thread the screws "
"through the bearings, ③, bearings, ⑤, in that order. The screws are not "
"fixed, but you will tighten them when you mount the servo in the next "
"step."
msgstr "M2x14mmのボルトとボールベアリング2組を使用します。ボルトをベアリング、③、ベアリング、⑤の順で通します。ボルトは固定されていませんが、次工程でサーボに取り付ける際にボルトを締めます。"

#: ../../guide/Assembly.rst:297
msgid "Completion of a right leg"
msgstr "脚部の仕上げ"

#: ../../guide/Assembly.rst:300
msgid ""
"Now we have one leg on the right side. Here are some pictures so you can "
"see it from different angles. The left leg should be symmetrical with the"
" right one."
msgstr "これで右側の脚が一本完成しました。色んな角度から見れるように写真を貼っておきます。左側は右側と線対称になるように組みます。"

#: ../../guide/Assembly.rst:311
msgid "opposite side"
msgstr "裏"

#: ../../guide/Assembly.rst:320
msgid "Step 3.2 Four legs"
msgstr "Step 3.2 前足と後ろ足"

#: ../../guide/Assembly.rst:326
msgid "Step 3.3 Locktite"
msgstr "Step 3.3ロックタイト"

#: ../../guide/Assembly.rst:328
msgid ""
"As the nut is on a moving joint, it will loosen quickly if tightened too "
"tightly. They should be secured with Loctite. It is possible to dismantle"
" the nut later, as it can be loosened by a strong force."
msgstr "ナットは動く関節にあるので、ナットを強く締めても直ぐに緩んでしまいます。ロックタイトで固定しましょう。なお、ロックタイトで固定されたナットは強い力ならば緩められるので、あとから解体も可能です。"

#: ../../guide/Assembly.rst:333
msgid "Some screws are also secured with glue as the below picture shows."
msgstr "また、下の写真のように接着剤をつけたネジもあります。"

#: ../../guide/Assembly.rst:340
msgid "4. Hips Assembly"
msgstr "4. 足の取り付け"

#: ../../guide/Assembly.rst:343
msgid "Step 4.1 Hip"
msgstr "Step 4.1 モータの設置"

#: ../../guide/Assembly.rst:354
msgid ""
"There are two kinds of servo cables, No.1,4,7,10 cables length is 9cm, "
"other cables length is 15cm."
msgstr "サーボケーブルは2種類があり、1号,4号,7号,10号は9cmで、その他は15cmです。"

#: ../../guide/Assembly.rst:356
msgid "For the position of each servos, please refer to the below picture."
msgstr "各サーボの位置は、下図をご参照ください。"

#: ../../guide/Assembly.rst:361
msgid "Here shows how to assemble the rear right hip."
msgstr "ここでは、右後臀部の組み立て方を紹介します。"

#: ../../guide/Assembly.rst:363
msgid ""
"Confirm whether the servo shaft is at the right position. The middle "
"position marker is added on the output shaft, the output shaft is at its "
"middle position by fault as the left picture shows. The shaft position "
"may be changed during assembly as the middle picture shows, if you find "
"it, you can use the servo horn to move the output shaft to the right "
"position, and then finally make the servo horn at the place as the right "
"picture shows."
msgstr "サーボモーターの軸の角度を確認してください。新バージョンの出力軸に目印がつけられたので、図中の三つの点を一直線に並ぶように意識してください。もし組み立ての途中に誤って軸の位置を移動してしまうと、サーボホーンを利用して軸を正しい位置に移動させ、最終的に右図のように戻してください。"

#: ../../guide/Assembly.rst:369
msgid "Connect the servo and hip part."
msgstr "おしりのところに取り付けるモーター。"

#: ../../guide/Assembly.rst:377
msgid "Put two servos into hip parts"
msgstr "サーボ2つを臀部部品に入れる。"

#: ../../guide/Assembly.rst:379
msgid "Insert two servos into the box and fix them with M2x6mm screws."
msgstr "2つのサーボを箱にはめて、M2x6mmのボルト4本で固定します。"

#: ../../guide/Assembly.rst:384
msgid "Four hip parts, please refer to the servo positions."
msgstr "四つの臀部部品のサーボポジションをご確認ください。"

#: ../../guide/Assembly.rst:390
msgid "Assemble leg and hip"
msgstr "脚部を臀部に取り付ける"

#: ../../guide/Assembly.rst:392
msgid ""
"※ If you have no technology background, it's easier to attach the leg to "
"the hip during the calibration step."
msgstr "※初心者の場合は、キャリブレーションしてから、足の固定という手順で進んでください."

#: ../../guide/Assembly.rst:394
msgid ""
"※ If you are the first time to assemble quadruped robot, we don't "
"recommand you use the Loctite."
msgstr "※初めて四足ロボットを組み立てるお客様には、ロックタイトを使用することをお勧めしません。"

#: ../../guide/Assembly.rst:396
msgid ""
"Attach the leg to the hip using the M2x12mm screws. Leg is tilted at "
"approximately 45°, as shown in the manual."
msgstr "M2x12mmのボルトを使って、脚を臀部に取り付けます。マニュアルの通り、脚がだいたい45度傾くように取り付けます。"

#: ../../guide/Assembly.rst:401
msgid ""
"Tighten the screws with Loctite. Use a toothpick to apply Loctite to the "
"servo's screw holes."
msgstr "ロックタイトでボルトをしっかりと固定しましょう。爪楊枝を使ってサーボの穴にロックタイトを塗っておきます。"

#: ../../guide/Assembly.rst:416
msgid "Step 4.2 Four Hips"
msgstr "Step 4.2 前後各２セット"

#: ../../guide/Assembly.rst:421
msgid "※ Please pay attention to the positions of the servo gear output shaft"
msgstr "※ サーボモーターの軸の位置にご注意ください。"

#: ../../guide/Assembly.rst:431
msgid "5. Body Frame Assembly"
msgstr "5. 本体の組み立て"

#: ../../guide/Assembly.rst:434
msgid "Step 5.1 Center parts"
msgstr "Step 5.1 モータの取り付け"

#: ../../guide/Assembly.rst:436
msgid "The position of each servos are shown as below."
msgstr "各サーボの位置は以下のとおりです。"

#: ../../guide/Assembly.rst:441
msgid ""
"※ There are two kinds of servo cables, No.1,4,7,10 cables length is 9cm, "
"other cables length is 15cm."
msgstr "※ サーボケーブルについては、1号、4号、7号、10号の長さが 9cm、それ以外が 15cmです。"

#: ../../guide/Assembly.rst:443
msgid ""
"It is useful to put masking tape on the cables and write the number of "
"servos during this process to make it easier later."
msgstr "サーボケーブルにマスキングテープを貼って、サーボの数を書いておくと、後で楽です。"

#: ../../guide/Assembly.rst:455
msgid "Step 5.2 Front parts"
msgstr "Step 5.2前部"

#: ../../guide/Assembly.rst:457
msgid ""
"*The front part is designed to hold the LCD screen. Make sure you don't "
"mistake it for the rear part."
msgstr "*前面パーツは液晶画面が入る形になっています。後部パーツと間違えないようにしましょう。"

#: ../../guide/Assembly.rst:467
msgid "Step 5.3 Rear side"
msgstr "Step 5.3 後部"

#: ../../guide/Assembly.rst:469
msgid "The same procedure as for the front part."
msgstr "前部と同じ要領です。"

#: ../../guide/Assembly.rst:490
msgid "Step 5.4 Battery"
msgstr "Step 5.4 バッテリー"

#: ../../guide/Assembly.rst:492
msgid ""
"If you DIY the battery, please ensure our battery spec at first, "
"especially the Voltage should be less than 7.4V, you can also refer to "
"other backers work "
"https://www.facebook.com/groups/716473723088464/posts/777616293640873/"
msgstr "バッテリーをDIYする場合は、最初にミニぷぱのバッテリーの仕様を確認してください、特に電圧は7.4V以下でなければなりません。また、他のバッカーのDIYバッテリーを参照することができます https://www.facebook.com/groups/716473723088464/posts/777616293640873/ "

#: ../../guide/Assembly.rst:495
msgid "Install the battery pack."
msgstr "バッテリーパックを取り付けます。"

#: ../../guide/Assembly.rst:500
msgid "Be careful of the carbon fiber front and rear orientation."
msgstr "前後の向きに気をつけましょう。"

#: ../../guide/Assembly.rst:505
msgid ""
"Slide the battery backwards and secure it. Pass the cable through the "
"hole in the bottom plate and bring it up to the top."
msgstr "底からバッテリーを上にはめて、後ろにぐっとずらし固定します。ケーブルを底のプレートの穴に通し、上まで持ってきます。"

#: ../../guide/Assembly.rst:512
msgid "Step 5.5 Bottom plate"
msgstr "Step 5.5 下部"

#: ../../guide/Assembly.rst:514
msgid "The orientation of the plate must be such that the hole is at the front."
msgstr "バッテリーケーブル用の穴を前に向く"

#: ../../guide/Assembly.rst:519
msgid "If the leg is stuck, turn the part ①"
msgstr "足が動かなくなった場合、部品 ① の箇所を回してみてください。"

#: ../../guide/Assembly.rst:529
msgid "Step 5.6 Display and Frame of face"
msgstr "Step 5.6 顔の組み立て"

#: ../../guide/Assembly.rst:531
msgid ""
"Remove the protective sheet for the display. Fold the thin flexible cable"
" at the edge of the display. Attach the board and the display to the main"
" unit. When attaching the display, you can use a stick to gently push the"
" flexible cable, so that it goes as far back as possible."
msgstr ""
"液晶画面上のシートを外し、付属の基盤ケーブルを回りに収める。"
"本体の上に液晶画面を取り付けるとき、基盤ケーブルのところも丁寧に入れるよう、気を付けてください。"

#: ../../guide/Assembly.rst:548
msgid "Be careful with the yellow parts as it has a front and back."
msgstr "下図の黄色カバーは表裏若干異なるため、気を付けて取り付ける。"

#: ../../guide/Assembly.rst:561
msgid "Step 5.7 Custom circuit board"
msgstr "Step 5.7 カスタム PCB 基盤"

#: ../../guide/Assembly.rst:563
msgid "Plug the display cable into the custom circuit board."
msgstr "液晶画面のケーブルを PCB 基盤に差し込む。"

#: ../../guide/Assembly.rst:571
msgid ""
"Insert the 12 servo cables. In the picture, you can see: J1,J2,J3.... . "
"J12."
msgstr ""
"12個のモーターを入れる。写真で説明すると、J1,J2,J3...J12順番の通りに挿していきます。"

#: ../../guide/Assembly.rst:576
msgid "Use four M2x5mm screws and four short supports."
msgstr "M2x5mmのボルト4本と短い支柱4本を使用します。"

#: ../../guide/Assembly.rst:585
msgid "put on the carbon fiber board"
msgstr "付属ボードを取り付ける"

#: ../../guide/Assembly.rst:590
msgid ""
"plug in the battery cable. This connector may interfere with the hips "
"parts, so you have to slide it through a hole in the middle of the board."
msgstr ""
"電池ケーブルを差し込む。このコネクタは腰の部分と干渉する可能性があるので、基板の真ん中の穴からスライドさせる必要があります。"

#: ../../guide/Assembly.rst:595
msgid ""
"Use eight M2x5mm screws. The orientation of the plate must be such that "
"the large opening is at the front."
msgstr "M2x5mmのボルトを8本使用します。プレートの向きは、写真のように、前の方に大きな開口部が来る必要があります"

#: ../../guide/Assembly.rst:600
msgid ""
"Pull the custom circuit board closer to the body. The board may float, "
"but you can use four long posts to hold it in place."
msgstr ""
"12本のケーブルを挿したらカスタム回路基板をぐっと力を入れてボティに近づけます。ケーブルの反発で基板が浮いてきますが、長い支柱を4本挿して固定しましょう。"

#: ../../guide/Assembly.rst:612
msgid ""
"※ Need to pay attention to the cable of the No. 1 servo to prevent it "
"from being overwhelmed."
msgstr "※ No.1サーボのケーブルに圧倒されないように注意する必要があります。"

#: ../../guide/Assembly.rst:620
msgid "Step 5.8 Fan"
msgstr "Step 5.8　ファン"

#: ../../guide/Assembly.rst:622
msgid "To install the fan."
msgstr "ファンを取り付ける"

#: ../../guide/Assembly.rst:632
msgid "Step 5.9 Raspberry Pi 4"
msgstr ""
"Step 5.9　ラズパイ 4 "

#: ../../guide/Assembly.rst:643
msgid "6. Cover Assembly"
msgstr "6. カバー部の組み立て"

#: ../../guide/Assembly.rst:654
msgid "Step 6.1 Side panels"
msgstr "Step 6.1 本体のサイドパネル"

#: ../../guide/Assembly.rst:663
msgid "Step 6.2 Shin guards"
msgstr "Step 6.2 もものカバー"

#: ../../guide/Assembly.rst:665
msgid "Use four M2x10mm countersunk screws."
msgstr "M2x10mmのボルトを4本使用します。"

#: ../../guide/Assembly.rst:674
msgid "Step 6.3 Shoulders"
msgstr "Step 6.3 足のカバ"

#: ../../guide/Assembly.rst:676
msgid ""
"Insert only the screws first and then insert the shoulder parts into the "
"gap. Insert the 2 mm hex driver into the hole in the shoulder part and "
"tighten the screws."
msgstr "先にボルトだけ挿し、その隙間に肩パーツを差し込みます。肩パーツの穴に2mm六角レンチを入れてボルトを締めます。"

#: ../../guide/Assembly.rst:691
msgid "Step 6.4 Top cover"
msgstr "Step 6.4 頭部カバー"

#: ../../guide/Assembly.rst:693
msgid ""
"Use four M2x10mm screws, if the holes are too small to fit the screws, as"
" the part is made with a 3D printer, you can enlarge the holes by turning"
" them with the supplied 2mm hexagonal screwdriver."
msgstr "M2x10mmボルトを4本使用します。3Dプリンタで作られたパーツなので、穴が小さくボルトが入らない場合は、付属の2mm六角ドライバでグリグリと回して穴を大きくしましょう。"

#: ../../guide/Assembly.rst:705
msgid "Step 6.5 Shoes"
msgstr "Step 6.5 足元"

#: ../../guide/Assembly.rst:707
msgid "Put on 4 shoes."
msgstr "足元を取り付ける"

#: ../../guide/Assembly.rst:717
msgid "Step 6.6 Completion!"
msgstr "Step 6.6 完成！"

#: ../../guide/Examples.rst:3
msgid "Examples"
msgstr "事例紹介"

#: ../../guide/Examples.rst:17
msgid "1. Custom shell parts"
msgstr "1. カスタムシェルパーツ"

#: ../../guide/Examples.rst:18
msgid ""
"Pupper is open source project, that means, you can custom what you want. "
"You can find all the `3D printed shell files "
"<https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-"
"eLVm5zjyi?usp=sharing>`_  and custom them."
msgstr "ミニぷぱはオープンソースプロジェクトなので、自由にカスタマイズできます。
<https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-eLVm5zjyi?usp=sharing>`_ より 3Dプリントされたシェルファイルを探して、カスタマイズすることができます。"

#: ../../guide/Examples.rst:22
msgid "2. Custom Facial Animation"
msgstr "2. 顔写真のカスタマイズ"

#: ../../guide/Examples.rst:25
msgid "2.1 Prerequisites"
msgstr "2.1 必要なもの"

#: ../../guide/Examples.rst:29
msgid "Keyboard and mouse"
msgstr "キーボードとマウス"

#: ../../guide/Examples.rst:30
msgid "a new picture"
msgstr "写真一枚"

#: ../../guide/Examples.rst:36
msgid "2.2 Run"
msgstr "2.2　走る"

#: ../../guide/Examples.rst:38
msgid "Connect MiniPupper to the display by mirco HDMI cable"
msgstr "mirco HDMIケーブルでMiniPupperをディスプレイに接続します。"

#: ../../guide/Examples.rst:43
msgid "A: wireless adapter for the keyboard and mouse"
msgstr "A：キーボード･マウス用のワイヤレスアダプター"

#: ../../guide/Examples.rst:44
msgid "B: mirco HDMI cable"
msgstr "B: mirco HDMIケーブル"

#: ../../guide/Examples.rst:46
msgid "Ubuntu login"
msgstr "Ubuntuのログイン"

#: ../../guide/Examples.rst:51
msgid "The default password is mangdang"
msgstr "初期のパスワードはmangdangです"

#: ../../guide/Examples.rst:54
msgid "3. Keyboard controller"
msgstr "3. キーボードコントローラー"

#: ../../guide/Examples.rst:57
msgid "3.1 Keyboard controller based on nonROS version"
msgstr "3.1 ROSバージョンをベースにしたキーボードコントローラー"

#: ../../guide/Examples.rst:58
msgid ""
"The feature is based on `PupperKeyboardController project "
"<https://github.com/stanfordroboticsclub/PupperKeyboardController>`_, "
"it's Pygame-based keyboard controller for Stanford Pupper."
msgstr "この機能は `PupperKeyboardController project <https://github.com/stanfordroboticsclub/PupperKeyboardController>`_ をベースにしています。Stanford Pupperの Pygameベースのキーボードコントローラです。"

#: ../../guide/Examples.rst:60
msgid "Install PyGame"
msgstr "PyGameをインストールする"

#: ../../guide/Examples.rst:66
msgid "Controls"
msgstr "コントローラの操作"

#: ../../guide/Examples.rst:80
msgid "3.2 Keyboard controller based on ROS version"
msgstr "3.2 ROSバージョンに基づくキーボードコントローラ"

#: ../../guide/Examples.rst:82
msgid "Please refer to the SLAM section."
msgstr "SLAMの項をご参照ください。"

#: ../../guide/Examples.rst:85
msgid "4. Web controller"
msgstr "4. ウェブコントローラ"

#: ../../guide/Examples.rst:87 ../../guide/Examples.rst:92
#: ../../guide/Examples.rst:108
msgid "Will update soon!"
msgstr "近日公開予定です"

#: ../../guide/Examples.rst:90
msgid "5. Mobile controller"
msgstr "5. モバイルコントローラー"

#: ../../guide/Examples.rst:95
msgid "6. Docker"
msgstr "6. Docker"

#: ../../guide/Examples.rst:98
msgid "6.1 Docker for Pupper"
msgstr "6.1 Pupper用Docker"

#: ../../guide/Examples.rst:99
msgid ""
"Dockerfile for Mini Pupper ROS package, comes from `docker-mini-pupper-"
"ros project <https://github.com/Tiryoh/docker-mini-pupper-ros.git>`_."
msgstr "ミニぷぱ ROS パッケージの Dockerfile は `docker-mini-pupper-ros プロジェクト <https://github.com/Tiryoh/docker-mini-pupper-ros.git>`_ で確認できます。"

#: ../../guide/Examples.rst:102
msgid "6.2 Docker for Host"
msgstr "6.2 Host用Docker"

#: ../../guide/Examples.rst:103
msgid ""
"Host computer setup for interfacing with a Mini Pupper over a network, "
"comes from `mp_host_setup project "
"<https://github.com/zmk5/mp_host_setup.git>`_."
msgstr "ネットワーク経由でミニぷぱと接続するためのホストコンピュータのセットアップは、 `mp_host_setup project <https://github.com/zmk5/mp_host_setup.git>`_ で確認できます。"

#: ../../guide/Examples.rst:106
msgid "7. Scratch program"
msgstr "7. Scratchプログラム"

#: ../../guide/Features.rst:2
msgid "Features"
msgstr "機能紹介"

#: ../../guide/Features.rst:11
msgid "Hardware Specifications"
msgstr "ハードウェアの仕様"

#: ../../guide/Features.rst:13
msgid "Dimensions: 210x110x165mm"
msgstr "寸法: 210x110x165mm"

#: ../../guide/Features.rst:14
msgid "Weight: 509g"
msgstr "重量：509g"

#: ../../guide/Features.rst:15
msgid "Battery: 1000mAh / micro-usb charge"
msgstr "バッテリー：1000mAh / micro-usb充電"

#: ../../guide/Features.rst:16
msgid "Processor: Raspberry Pi 4B"
msgstr "プロセッサー: Raspberry Pi 4B"

#: ../../guide/Features.rst:17
msgid "Screen: 240x320 ISP LCD"
msgstr "ISP LCD"

#: ../../guide/Features.rst:18
msgid "Input charger: 5V 1A"
msgstr "充電器：5V 1A"

#: ../../guide/Features.rst:19
msgid "OS: Ubuntu/ROS"
msgstr "OS: Ubuntu/ROS"

#: ../../guide/Features.rst:22
msgid "Dimension"
msgstr "寸法図"

#: ../../guide/Features.rst:27
msgid "Open Source Hardware"
msgstr "オープンソース・ハードウェア"

#: ../../guide/Features.rst:29
msgid "Lidar module"
msgstr "Lidarモジュール"

#: ../../guide/Features.rst:31
msgid ""
"If you want to explore ROS SLAM, Navigation functions based on Lidar, you"
" also need a Lidar module. We can ONLY ensure the Lidar module can work "
"well based on our source code, and NOT ensure that you get from other "
"channels. We already tested some Lidar modules, such as, PRLidar A1, "
"YDLidar X2L, and LD06. For Mini Pupper, we refer to LD06 as it is "
"smaller."
msgstr "ROS SLAM、Lidarに基づくNavigation機能を探求したい場合、Lidarモジュールが必要です。
LidarモジュールがMangDangのソースコードに基づいてうまく動作することを保証するだけで、他のチャネルから取得したものを保証することはできません。
PRLidar A1、YDLidar X2L、LD06などいくつかのライダーモジュールをテストした後、小型のLD06を選びました。"

#: ../../guide/Features.rst:33
msgid "OpenCV Camera module"
msgstr "OpenCVカメラモジュール"

#: ../../guide/Features.rst:35
msgid ""
"For potential security issues, the camera module is not included in our "
"default package. If you want to explore camera AI functions, you can "
"choose a normal USB camera module, of course, a 3D camera module is "
"better for study. If try the 3D camera module, we recommend you OpenCV's "
"latest 3D camera module, named OAK-D LITE, comes from OpenCV&Luxonis. We "
"have good relationship with Luxonis, their RobotHub will release more "
"interesting demos soon."
msgstr "セキュリティ上の問題で、カメラモジュールはデフォルトのパッケージには含まれていません。
もし、カメラのAI機能を試したい場合は、通常のUSBカメラモジュールを選択することができますし、もちろん、3Dカメラモジュールの方が勉強にに役立ちます。
3Dカメラモジュールを試すなら、OpenCVの最新の3Dカメラモジュール、OAK-D LITE（OpenCV&Luxonis社製）をお勧めします。
Luxonisといい仲間です、彼らのRobotHubは近いうちにもっと面白いデモをリリースする予定です。"

#: ../../guide/HowToOrder.rst:3
msgid "How To Order"
msgstr "注文方法"

#: ../../guide/HowToOrder.rst:9 ../../guide/MachineLearning.rst:9
#: ../../guide/Navigation.rst:9
msgid "Summary"
msgstr "会社概要"

#: ../../guide/HowToOrder.rst:11
msgid ""
"Mini Pupper was released by `MangDang <https://www.mangdang.net/>`_ on "
"2021, many makers all over the world are contributing Pupper robot "
"project, as it is open source based software, hardware, and content. We "
"are encouraging more partners and research collaborators to participate "
"in this project to enrich the robotics field. Looking forward to more "
"partners who can provide technology, educational service or distribution "
"in each country."
msgstr "ミニぷぱは2021年に `MangDang <https://www.mangdang.net/>`_ によってリリースされました。Pupperロボットプロジェクトは、ソフトウェア、ハードウェア、コンテンツがオープンソースであるため、世界中の多くのメーカーが応援してくれました。"
"私たちは、ロボット工学の分野を豊かにするために、より多くのパートナーや研究協力者にこのプロジェクトに参加してもらいたいです。"
"今後、各国で技術や教育サービス、流通を提供できるパートナーが増えることを期待しています。"

#: ../../guide/HowToOrder.rst:13
msgid ""
"If you are interested in a partnership with us to realize open source "
"robotics, please send an email to us( sales@mangdang.net ), thanks!"
msgstr "オープンソースロボティクスを実現するために、私たちとのパートナーシップにご興味がある方は、私たち( sales@mangdang.net )にメールを送ってください。ありがとうございます。"

#: ../../guide/HowToOrder.rst:16
msgid "Order parts individually"
msgstr "部品を個別に注文する"

#: ../../guide/HowToOrder.rst:17
msgid ""
"You can order all the parts one by one, Please find the BOM list to order"
" `here <https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-"
"eLVm5zjyi>`_ ."
msgstr "すべてのパーツを1つずつ注文することができます。 https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-"
"eLVm5zjyi"

#: ../../guide/HowToOrder.rst:19
msgid ""
"However, you can purchase a kit to build the robot from MangDang channel "
"for cheaper and one-stop shopping."
msgstr "MangDangチャンネルからロボットを組み立てるキットを購入することで、より安く、ワンストップで購入することができます。"

#: ../../guide/HowToOrder.rst:22
msgid "One-stop channel"
msgstr "ワンストップチャンネル"

#: ../../guide/HowToOrder.rst:24
msgid "World wide"
msgstr "ワールドワイド"

#: ../../guide/HowToOrder.rst:25
msgid "`MANGDANG (HK) LIMITED <https://www.mangdang.net/>`_"
msgstr "`MANGDANG (HK) LIMITED <https://www.mangdang.net/>`_ "

#: ../../guide/HowToOrder.rst:26
msgid "`Shopify <https://mangdang.store/>`_"
msgstr "`Shopify <https://mangdang.store/>`_"

#: ../../guide/HowToOrder.rst:27
msgid ""
"`Aliexpress "
"<https://www.aliexpress.com/store/911381222?spm=a2g0o.detail.1000007.1.2ed464e6sdYBwy>`_"
msgstr "`Aliexpress <https://www.aliexpress.com/store/911381222?spm=a2g0o.detail.1000007.1.2ed464e6sdYBwy>`_"

#: ../../guide/HowToOrder.rst:30
msgid "North America"
msgstr "北アメリカ"

#: ../../guide/HowToOrder.rst:31
msgid ""
"`Amazon "
"<https://www.amazon.com/s?me=A3V5171RNQ5C18&marketplaceID=ATVPDKIKX0DER>`_"
msgstr "`Amazon <https://www.amazon.com/s?me=A3V5171RNQ5C18&marketplaceID=ATVPDKIKX0DER>`_"

#: ../../guide/HowToOrder.rst:32
msgid "`RobotShop <https://www.robotshop.com/en/vendor/mangdang.html>`_"
msgstr "`RobotShop <https://www.robotshop.com/en/vendor/mangdang.html>`_"

#: ../../guide/HowToOrder.rst:35
msgid "Japan"
msgstr "日本"

#: ../../guide/HowToOrder.rst:36
msgid ""
"`Amazon "
"<https://www.amazon.co.jp/s?me=A14LOTMOI42BRX&marketplaceID=A1VC38T7YXB528>`_"
msgstr "`Amazon <https://www.amazon.co.jp/s?me=A14LOTMOI42BRX&marketplaceID=A1VC38T7YXB528>`_"

#: ../../guide/HowToOrder.rst:37
msgid "`Makuake <https://www.makuake.com/project/mini_pupper/shopping/>`_"
msgstr "`Makuake <https://www.makuake.com/project/mini_pupper/shopping/>`_"

#: ../../guide/HowToOrder.rst:40
msgid "China"
msgstr "中国"

#: ../../guide/HowToOrder.rst:41
msgid ""
"`Taobao "
"<https://shop170300127.taobao.com/search.htm?spm=a1z10.1-c-s.w5002-22838104363.1.6d5d661eivPk3l&search=y>`_"
msgstr "`Taobao <https://shop170300127.taobao.com/search.htm?spm=a1z10.1-c-s.w5002-22838104363.1.6d5d661eivPk3l&search=y>`_"

#: ../../guide/HowToOrder.rst:42
msgid ""
"`WHEELTEC "
"<https://item.taobao.com/item.htm?spm=a230r.1.14.6.22fa6a73ftZSHR&id=672561778737&ns=1&abbucket=13#detail>`_"
msgstr "`WHEELTEC <https://item.taobao.com/item.htm?spm=a230r.1.14.6.22fa6a73ftZSHR&id=672561778737&ns=1&abbucket=13#detail>`_"

#: ../../guide/MachineLearning.rst:3
msgid "Machine Learning"
msgstr "機械学習"

#: ../../guide/MachineLearning.rst:18
msgid ""
"For potential security issues, the camera module is not included in our "
"default package. If you want to explore camera AI functions, you can "
"choose a normal USB camera module, of course, a 3D camera module is "
"better for study. If try the 3D camera module, we recommend you OpenCV's "
"latest 3D camera module, named OAK-D LITE, comes from OpenCV&Luxonis."
msgstr "セキュリティのため、カメラモジュールはデフォルトのパッケージには含まれていません。もし、カメラのAI機能を試したい場合には、通常のUSBカメラモジュールでOKです。もちろん、3Dカメラモジュールのほうがより研究には適しています。3Dカメラモジュールを選択する場合は、最新のOAK-D LITE3Dカメラモジュール(OpenCV&Luxonis社)をお勧めします。"

#: ../../guide/MachineLearning.rst:21
msgid "1. Single camera module"
msgstr "1. シングルカメラモジュール"

#: ../../guide/MachineLearning.rst:23
msgid "1.1 Collision Avoidance"
msgstr "1.1 衝突回避"

#: ../../guide/MachineLearning.rst:24 ../../guide/MachineLearning.rst:28
#: ../../guide/MachineLearning.rst:32 ../../guide/MachineLearning.rst:36
#: ../../guide/MachineLearning.rst:40 ../../guide/MachineLearning.rst:62
msgid "Will update late."
msgstr "近日公開予定です"

#: ../../guide/MachineLearning.rst:27
msgid "1.2 Teleoperation"
msgstr "1.2 遠隔操作"

#: ../../guide/MachineLearning.rst:31
msgid "1.3 Road Following"
msgstr "1.3 道路追従"

#: ../../guide/MachineLearning.rst:35
msgid "1.4 Object Following"
msgstr "1.4 物体追従"

#: ../../guide/MachineLearning.rst:39
msgid "1.5 Face Detect"
msgstr "1.5 顔認識"

#: ../../guide/MachineLearning.rst:43
msgid "2. 3D(OAK-D-Lite) camera module"
msgstr "2. 3D(OAK-D-Lite)カメラモジュール"

#: ../../guide/MachineLearning.rst:46
msgid "2.1 Object Following"
msgstr "2.1 物体追従"

#: ../../guide/MachineLearning.rst:47
msgid ""
"You can download the `pre-built ROS image "
"<https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-"
"eLVm5zjyi>`_ , named \"xxx.MiniPupper_ROS&OpenCV_Ubuntu20.04.03.img\" to "
"test the object following feature using OAK-D-LITE 3D camera module."
msgstr "OAK-D-LITE 3Dカメラモジュールを使った物体追跡機能のテストには、`pre-built ROS image <https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-eLVm5zjyi>`_  (名前 \.MiniPupper_ROS&OpenCV_Ubuntu20.04.03.img )をダウンロードしてください。"

#: ../../guide/MachineLearning.rst:61
msgid "2.2 Live streaming"
msgstr "2.2 ライブストリーミング "

#: ../../guide/Navigation.rst:3
msgid "Navigation"
msgstr "ナビゲーション"

#: ../../guide/Navigation.rst:17
msgid ""
"Mini Pupper's ROS version is based on `Champ "
"<https://github.com/chvmp/champ>`_  open source project, and we made some"
" changes to Navigation functions."
msgstr "ミニぷぱのROSバージョンは、オープンソースプロジェクトの `Champ <https://github.com/chvmp/champ>`_  をベースにしており、Navigation機能にいくつかの変更を加えました。"

#: ../../guide/Navigation.rst:21
msgid "1. ROS1(Noetic) Navigation based on Lidar"
msgstr "1. LiDARベースのROS1(Noetic)ナビゲーション"

#: ../../guide/Navigation.rst:22
msgid ""
"Before run the below steps, please confirm you already prepared all the "
"environment in SLAM section."
msgstr "以下のステップを実行する前に、SLAMセクションですべての環境が準備されたことを確認してください。"

#: ../../guide/Navigation.rst:25
msgid "1.1 Change the map file"
msgstr "1.1 マップファイルの変更"

#: ../../guide/Navigation.rst:26
msgid ""
"Before running navigation, you should first change the launch file with "
"the map you created. ::"
msgstr "ナビゲーションを実行する前に、作成した地図で起動ファイルを変更する必要があります ::"

#: ../../guide/Navigation.rst:33
msgid "Then change arg of the map_file and pbstream_file."
msgstr "その後、map_fileとpbstream_fileのargを変更する。"

#: ../../guide/Navigation.rst:40
msgid "1.2 Run the base driver"
msgstr "1.2 ベースドライバーの実行"

#: ../../guide/Navigation.rst:41
msgid "**You should run this command on Mini Pupper** ::"
msgstr "**ミニぷぱでこのコマンドを実行する必要があります** ::"

#: ../../guide/Navigation.rst:47
msgid "1.3 Run Cartographer(for localization) and Move_Base"
msgstr "1.3 Cartographer（ローカライズ用）とMove_Baseの実行"

#: ../../guide/Navigation.rst:48
msgid ""
"**You should run this command on PC** **If you are using gazebo, set the "
"param /use_sim_time to true in the launch file.** ::"
msgstr "**このコマンドはPCで実行する必要があります。** "
"**gazeboを使用している場合、起動ファイルのパラメータ /use_sim_time をtrueに設定します** ::"

#: ../../guide/QuickStartGuide.rst:3
msgid "Quick Start Guide"
msgstr "クイックスタートガイド"

#: ../../guide/QuickStartGuide.rst:9
msgid "Run Pupper Robot"
msgstr "ミニぷぱ（以下、本体）を動かく"

#: ../../guide/QuickStartGuide.rst:19
msgid "|youtu.be-pre-assembled-user-guide|"
msgstr "|youtu.be-pre-assembled-user-guide-ja|"

#: ../../guide/QuickStartGuide.rst:21
msgid "Power On Mini Pupper"
msgstr "電源を入れます"

#: ../../guide/QuickStartGuide.rst:23
msgid ""
"Push on the battery power button for at least 3 seconds to power on Mini "
"Pupper. After power on, if you push on the power button for at least 3 "
"seconds again, it will power off."
msgstr ""
"本体下にある電源ボタンを 3 "
"秒長押しして立ち上げ、ランプが点灯します。本体の電源を切る際も、同じボタンを3秒長押ししますと、電源切りになり、ランプも消えます。"

#: ../../guide/QuickStartGuide.rst:25
msgid "Connect the controller to the Pi by putting it pairing mode."
msgstr "ペアリングモードにして、コントローラとPiを接続します。"

#: ../../guide/QuickStartGuide.rst:27 ../../guide/QuickStartGuide.rst:74
msgid ""
"To put it into pairing mode, hold the share button and home button at the"
" same time until it starts making quick double flashes."
msgstr "ペアリングモードにするには、「SHARE」ボタンと中央のPSボタンを同時に押し続けます。その後、ライトが2回点滅し始めます。"

#: ../../guide/QuickStartGuide.rst:28
msgid ""
"If it starts making slow single flashes, hold the home button down until "
"it stops blinking(about 15s) and try again."
msgstr "ゆっくりと点滅し始めたら、点滅が止まるまでホームボタンを押したままにして（約15秒）、もう一度試してください。"

#: ../../guide/QuickStartGuide.rst:33
msgid ""
"Wait until the controller binds to the robot, at which point the "
"controller should turn a dim green (or whatever color you chose in "
"pupper/HardwareConfig.py for the deactivated color)."
msgstr "コントローラーが本体に接続されるまで待ちます。"

#: ../../guide/QuickStartGuide.rst:34
msgid ""
"Press L1 on the controller to \"activate\" the robot. The controller "
"should turn bright green (or again, whatever you chose in "
"HardwareConfig)."
msgstr "コントローラーのL1を押して、本体を「アクティブ化」します。 ここでコントローラーライトは明るい緑色に変わります。"

#: ../../guide/QuickStartGuide.rst:35
msgid ""
"You're good to go! Check out the controls section below for operating "
"instructions."
msgstr "上記で準備が完了です。操作手順については、以下の制御セクションを確認してください。"

#: ../../guide/QuickStartGuide.rst:38
msgid "Pupper Robot controls"
msgstr "コントローラの操作"

#: ../../guide/QuickStartGuide.rst:40
msgid "L1: Press to toggle active mode and deactivate mode."
msgstr "L1を押し、アクティブモードと非アクティブモードに切り替えます。"

#: ../../guide/QuickStartGuide.rst:42
msgid ""
"Note: the controller's front light will change colors to indicate if the "
"robot is deactivated or activated."
msgstr "コントローラーのライトは、本体がアクティブ化されているか、されていないかを示すために色が変わります。"

#: ../../guide/QuickStartGuide.rst:44
msgid "R1: Press to transition between Rest mode and Trot mode."
msgstr "R1を押して、レストモードとトロットモードに切り替えます。"

#: ../../guide/QuickStartGuide.rst:46
msgid "Left joystick"
msgstr "左スティック"

#: ../../guide/QuickStartGuide.rst:48
msgid "Forward/back: moves the robot forward/backward when in Trot mode."
msgstr "前進/後退:トロットモード時、本体を前進/後退させます"

#: ../../guide/QuickStartGuide.rst:49
msgid "Left/right: moves the robot left/right when in Trot mode."
msgstr "左/右:トロットモード時、本体を左/右に動かします。"

#: ../../guide/QuickStartGuide.rst:51
msgid "Right joystick"
msgstr "右スティック"

#: ../../guide/QuickStartGuide.rst:53
msgid "Forward/back: pitches the robot forward/backward."
msgstr "前方/後方:本体を前方および後方にピッチングします。"

#: ../../guide/QuickStartGuide.rst:54
msgid "Left/right: turns the robot left/right."
msgstr "左/右:本体を左右に回転させます。"

#: ../../guide/QuickStartGuide.rst:58
msgid "D-Pad"
msgstr "十字キー"

#: ../../guide/QuickStartGuide.rst:57
msgid "Forward/back: raises and lowers the body."
msgstr "前後:体を上げ下げします。"

#: ../../guide/QuickStartGuide.rst:58
msgid "Left/rights: rolls the body left/right."
msgstr "左/右:体を左/右に回転させます。"

#: ../../guide/QuickStartGuide.rst:60
msgid "\"X\" button: Press it three times to complete a full hop."
msgstr "「X」ボタン:3回押すと、ジャンプします。"

#: ../../guide/QuickStartGuide.rst:62
msgid "Shut down the system to press controller circle botton for 3 seconds."
msgstr "コントローラーの丸いボタンを3秒間押して、システムをシャットダウンします。"

#: ../../guide/QuickStartGuide.rst:67
msgid "Power off the battery"
msgstr "電源オフ"

#: ../../guide/QuickStartGuide.rst:70
msgid "Important Notes"
msgstr "注意事項"

#: ../../guide/QuickStartGuide.rst:72
msgid "Controller pairing instructions (repeat of instructions above)"
msgstr "コントローラーのペアリング手順（上記の手順の繰り返し）"

#: ../../guide/QuickStartGuide.rst:75
msgid ""
"If it starts making slow single flashes, hold the home button down until "
"it stops blinking and try again."
msgstr "ゆっくりと点滅し始めたら、点滅が止まるまでホームボタンを押したままにして（約15秒）、もう一度試してください。"

#: ../../guide/QuickStartGuide.rst:77
msgid "Battery voltage"
msgstr "バッテリー電圧"

#: ../../guide/QuickStartGuide.rst:79
msgid ""
"If you use external power supply to power the robot with anything higher "
"than 8.4V (aka >2S) you'll almost certainly fry all your servos!"
msgstr "8.4V（別名> 2S）を超えるものでロボットに電力を供給すると、すべての高価なサーボが壊れてしまう可能性が高くなります。"

#: ../../guide/SLAM.rst:3
msgid "SLAM"
msgstr "SLAM"

#: ../../guide/SLAM.rst:9
msgid "SLAM(Simultaneous Localization and Mapping)"
msgstr "SLAM(自己位置推定とマッピング)"

#: ../../guide/SLAM.rst:17
msgid ""
"Mini Pupper's ROS version is based on `Champ "
"<https://github.com/chvmp/champ>`_  open source project, and we made some"
" changes to SLAM and Navigation functions."
msgstr "ミニぷぱのROSバージョンは、`Champ <https://github.com/chvmp/champ>`_ オープンソースプロジェクトをベースにしており、SLAMとNavigationの機能にいくつかの変更を加えました。"

#: ../../guide/SLAM.rst:21
msgid "1.Installation"
msgstr "1. 顔写真のカスタマイズ"

#: ../../guide/SLAM.rst:23
msgid ""
"We recommend you explore Mini Pupper with ROS network, make sure your PC "
"and Mini Pupper have connected to the same WiFi."
msgstr "PCとミニぷぱが同じWiFiに接続されていることを確認してから、ROSネットワークでミニぷぱを探索することをお勧めします。"

#: ../../guide/SLAM.rst:26
msgid "1.1 PC Setup"
msgstr "1.1 PC セットアップ"

#: ../../guide/SLAM.rst:27
msgid ""
"PC Setup corresponds to PC (your desktop or laptop PC) for controlling "
"Mini Pupper remotely. Do not apply these commands to your Mini Pupper."
msgstr "PCセットアップは、ミニぷぱをリモートコントロールするためのPC（デスクトップまたはラップトップPC）に対応しています。これらのコマンドはミニぷぱに適用しないでください。"

#: ../../guide/SLAM.rst:29
msgid "1.1.1 Cartographer ROS packages installation"
msgstr "1.1.1 Cartographer ROS パッケージのインストール"

#: ../../guide/SLAM.rst:31
msgid ""
"Our SLAM and Navigation functions are based on `cartographer_ros <https"
"://google-cartographer-ros.readthedocs.io/en/latest/compilation.html>`_ ."
msgstr "SLAMとNavigationの機能は、`cartographer_ros <https://google-cartographer-ros.readthedocs.io/en/latest/compilation.html>`_ をベースにしています。"

#: ../../guide/SLAM.rst:51
msgid "1.1.2 Mini Pupper ROS packages installation"
msgstr "1.1.2 ミニぷぱROSパッケージのインストール"

#: ../../guide/SLAM.rst:63
msgid "1.1.3 Network Setup"
msgstr "1.1.3 ネットワークの設定"

#: ../../guide/SLAM.rst:65
msgid ""
"Connect your PC and Mini Pupper to the same WiFi and find the assigned IP"
" address with the command below."
msgstr "PCとミニぷぱを同じWiFiに接続し、以下のコマンドで割り当てられたIPアドレスを確認してください。"

#: ../../guide/SLAM.rst:71
msgid "Open the file and update ROS IP settings with commands below."
msgstr "ファイルを開き、以下のコマンドでROSのIP設定を更新してください。"

#: ../../guide/SLAM.rst:77
msgid "Then add your Master and hostname config, for an example"
msgstr "次に、マスターとホスト名の設定を追加してください。"

#: ../../guide/SLAM.rst:87
msgid "1.2 Mini Pupper Setup"
msgstr "1.2 ミニぷぱセットアップ"

#: ../../guide/SLAM.rst:89
msgid ""
"You can also download the `pre-built ROS image "
"<https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-"
"eLVm5zjyi>`_ for Mini Pupper side, named "
"\"xxx.MiniPupper_ROS&OpenCV_Ubuntu20.04.03.img\"."
msgstr "ミニぷぱの `pre-built ROS image <https://drive.google.com/drive/folders/12FDFbZzO61Euh8pJI9oCxN-eLVm5zjyi>`_ （ファイル名： \.MiniPupper_ROS&OpenCV_Ubuntu20.04.03.img ）をダウンロードすることができます。"

#: ../../guide/SLAM.rst:91
msgid "1.2.1 Hardware Dependencies"
msgstr "1.2.1 ハードウェアの依存関係"

#: ../../guide/SLAM.rst:93
msgid ""
"You should first install dependencies of servos, battery moniter and "
"display screen. Please refer to `minipupper_ros_bsp "
"<https://github.com/mangdangroboticsclub/minipupper_ros_bsp>`_ ."
msgstr "まず、サーボ、バッテリーモニター、表示画面などの依存関係をインストールする必要があります。詳しくは `minipupper_ros_bsp <https://github.com/mangdangroboticsclub/minipupper_ros_bsp>`_ を参照してください。"

#: ../../guide/SLAM.rst:96
msgid "1.2.2 Controller Joystick interface installation"
msgstr "1.2.2 コントローラ ジョイスティック インターフェースの設置"

#: ../../guide/SLAM.rst:98
msgid ""
"The Joystick interface in ROS is based on `ps4-ros "
"<https://github.com/solbach/ps4-ros>`_  project."
msgstr "ROSのジョイスティックインターフェースは `ps4-ros <https://github.com/solbach/ps4-ros>`_ プロジェクトをベースにしています。"

#: ../../guide/SLAM.rst:109
msgid ""
"Then go into pairing mode with the controller: Home button + share button"
" for ~3 sec. Run $ds4drv from command line until the controller is "
"connected."
msgstr "ホームボタン＋シェアボタンで3秒間ペアリングモードにします。コントローラが接続されるまで、コマンドラインから$ds4drvを実行してください。"

#: ../../guide/SLAM.rst:116
msgid ""
"This will output something like \"Created devices /dev/input/jsX\". Then "
"give the permissions to the device"
msgstr "すると、「Created devices /dev/input/jsX」のような出力が表示されます。次に、デバイスにパーミッションを与えます。"

#: ../../guide/SLAM.rst:124
msgid "1.2.3 Mini Pupper ROS packages installation"
msgstr "1.2.3 ミニぷぱのROSパッケージのインストール"

#: ../../guide/SLAM.rst:126
msgid ""
"**Then you can install the ROS packages for Mini Pupper. This should be "
"installed both on Mini Pupper and your PC.**"
msgstr "**次に、ミニぷぱ用のROSパッケージをインストールします。これはミニぷぱとPCの両方にインストールする必要があります**。"

#: ../../guide/SLAM.rst:141
msgid "1.2.4 Network Setup"
msgstr "1.2.4 ネットワークのセットアップ"

#: ../../guide/SLAM.rst:143
msgid ""
"Connect your PC and Mini Pupper to the same WiFi and find the assigned IP"
" address with commands below."
msgstr "PCとMiniPupperを同じWiFiに接続して、下記のコマンドで割り当てられたIPアドレスを見つけます。"

#: ../../guide/SLAM.rst:149
msgid "Open the file and update the ROS IP settings with the command below."
msgstr "bashrcファイルを開いて,以下のコマンドでROSのIP設定を更新してください。"

#: ../../guide/SLAM.rst:155
msgid "Then add your Master and hostname config,for an example"
msgstr "マスターとホスト名の構成をbashrcファイルに追加します。"

#: ../../guide/SLAM.rst:164
msgid "2.Quick Start"
msgstr "2.クイックスタート"

#: ../../guide/SLAM.rst:167
msgid "2.1 Calibration"
msgstr "2.1 キャリブレーション"

#: ../../guide/SLAM.rst:169
msgid ""
"Through this script, you can calibrate the angle of every servo in one "
"turn. Just input the angles.</br> The hip and shank should be horizontal,"
" and the ham should be vertical."
msgstr "このスクリプトにより、1ターンですべてのサーボの角度をキャリブレーションすることができます。腰とすねは水平に、ハムは垂直になるように角度を入力してください。"

#: ../../guide/SLAM.rst:176
msgid "Make sure Mini Pupper looks like this after calibrating."
msgstr "キャリブレーション後、ミニぷぱがこのような状態になることを確認してください。"

#: ../../guide/SLAM.rst:182
msgid "2.2 Walking"
msgstr "2.2 歩行"

#: ../../guide/SLAM.rst:184
msgid "2.2.1 Run the base driver"
msgstr "2.2.1 ベースドライバーの実行"

#: ../../guide/SLAM.rst:186 ../../guide/SLAM.rst:238
msgid "**You should run this command on Mini Pupper**"
msgstr "**ミニぷぱでこのコマンドを実行する必要があります**"

#: ../../guide/SLAM.rst:192
msgid ""
"If Mini Pupper didn't stand as what you expect, you can edit "
"calibration.yaml in servo_interface/config/calibration to fix the angles."
msgstr "ミニぷぱが思ったように立たなかった場合は、servo_interface/config/calibration にある calibration.yaml を編集して角度を修正することができます。"

#: ../../guide/SLAM.rst:194
msgid "2.2.2 Control Mini Pupper"
msgstr "2.2.2 ミニぷぱのコントロール"

#: ../../guide/SLAM.rst:196
msgid "There are two options to control Mini Pupper:"
msgstr "ミニぷぱの制御には2つの方法があります。"

#: ../../guide/SLAM.rst:198
msgid "1.Use keyboard"
msgstr "1.キーボードの使用"

#: ../../guide/SLAM.rst:200
msgid "**It's recommended to run this command on PC.**"
msgstr "**このコマンドはPCで実行することをお勧めします**"

#: ../../guide/SLAM.rst:207
msgid "2.Use the controller"
msgstr "2.コントローラーの使用"

#: ../../guide/SLAM.rst:209
msgid "**It's recommended to run this command on Mini Pupper.**"
msgstr "**ミニぷぱでこのコマンドを実行することをお勧めします**。"

#: ../../guide/SLAM.rst:211
msgid ""
"**Don't run this command while using move_base because even if you are "
"doing nothing with the joystick, it would still send cmd_vel with all the"
" values as zero.**"
msgstr "**ジョイスティックで何もしていなくても、cmd_velにすべての値を0として送信してしまうため、move_base使用中にはこのコマンドを実行しないでください**。"

#: ../../guide/SLAM.rst:217
msgid "For the controller usage, please refer to Quick Start Guide."
msgstr "コントローラーの使用方法については、『クイックスタートガイド』を参照してください。"

#: ../../guide/SLAM.rst:219
msgid "2.2.2 LCD Screen"
msgstr "2.2.2 LCDスクリーン"

#: ../../guide/SLAM.rst:225
msgid ""
"We also made a simple ROS interface of the LCD screen."
msgstr "LCDスクリーン用の簡単なROSインターフェースも作りました。"

#: ../../guide/SLAM.rst:233
msgid "3. SLAM"
msgstr "3. SLAM"

#: ../../guide/SLAM.rst:236
msgid "3.1 Run the base driver"
msgstr "3.1 ベースドライバーの実行"

#: ../../guide/SLAM.rst:246
msgid "3.2 Run Cartographer"
msgstr "3.2 カートグラファーの実行"

#: ../../guide/SLAM.rst:248
msgid ""
"**You should run this command on PC** **If you are using gazebo, set the "
"param /use_sim_time to true in the launch file.**"
msgstr "**このコマンドはPCで実行する必要があります**。
**gazeboを使用している場合、起動ファイルのパラメータ/use_sim_timeをtrueに設定してください。**"

#: ../../guide/SLAM.rst:255
msgid ""
"Then you can use keyboard or joystick to control your Mini Pupper walking"
" around and creating a map. To save the map, run these commands below."
msgstr "そして、キーボードやジョイスティックでミニぷぱを操作して歩き回り、マップを作成することができます。マップを保存するには、以下のコマンドを実行してください。"

#: ../../guide/SLAM.rst:263
msgid "Remember to edit map.yaml</br> The first line should be"
msgstr "map.yamlを忘れずに編集してください。"
"最初の行は下記の通りです。"

#: ../../guide/SLAM.rst:270
msgid ""
"Then, copy map.pbstream, map.pgm and map.yaml files you just saved to "
"<your_ws>/src/minipupper_ros/mini_pupper/maps"
msgstr "次に、先ほど保存した map.pbstream、map.pgm、map.yaml を <your_ws>/src/minipupper_ros/mini_pupper/maps へコピーしてください。"

#: ../../guide/Simulation.rst:2
msgid "Simulation"
msgstr "シミュレーション"

#: ../../guide/Simulation.rst:7
msgid ""
"Instructions for Creating an AWS RoboMaker Environment for Mini Pupper, "
"please refer to"
msgstr "ミニぷぱ用のAWS RoboMaker環境の作成方法については、以下をご参照ください。"

#: ../../guide/Simulation.rst:9
msgid ""
"https://github.com/mangdangroboticsclub/aws-robomaker-mini-pupper-"
"application/"
msgstr "https://github.com/mangdangroboticsclub/aws-robomaker-mini-pupper-application/"

#: ../../guide/Simulation.rst:12
msgid "Instructions for Amazon AWS Robotics Blog, please refer to"
msgstr "ミニぷぱ用のAWS RoboMaker環境の作成方法については、以下のブログをご参照ください。"

#: ../../guide/Simulation.rst:14
msgid ""
"https://aws.amazon.com/blogs/robotics/build-and-simulate-a-mini-pupper-"
"robot-in-the-cloud-without-managing-any-infrastructure/"
msgstr "https://aws.amazon.com/blogs/robotics/build-and-simulate-a-mini-pupper-robot-in-the-cloud-without-managing-any-infrastructure/"

#: ../../guide/Simulation.rst:20
msgid ""
"Instructions for Amazon 2022 re:MARS RoboMaker&MiniPupper Workshop, "
"please refer to"
msgstr "Amazon 2022 re:MARS RoboMaker&MiniPupper Workshopのご案内をご覧ください。"

#: ../../guide/Simulation.rst:22
msgid ""
"https://catalog.us-east-1.prod.workshops.aws/workshops/511d7599-73bd-4142"
"-bd6b-fa83dbe3d8ce/en-US"
msgstr "https://catalog.us-east-1.prod.workshops.aws/workshops/511d7599-73bd-4142-bd6b-fa83dbe3d8ce/en-US"

#: ../../guide/Software.rst:3
msgid "Software Calibration"
msgstr "ソフトウェアキャリブレーション"

#: ../../guide/Software.rst:10
msgid "1. Calibration Setup"
msgstr "1.キャリブレーションセットアップ"

#: ../../guide/Software.rst:14
msgid ""
"In addition to the tools included in the kit, the following items are "
"required."
msgstr "付属の工具のほかに、次のものが必要です。"

#: ../../guide/Software.rst:18
msgid "HDMI display"
msgstr "HDMIディスプレイ"

#: ../../guide/Software.rst:19
msgid "micro HDMI cable for connection between display and Raspberry Pi"
msgstr "ディスプレイとRaspberry Piを接続するためのmicro HDMIケーブル"

#: ../../guide/Software.rst:22
msgid "Step 1.1 Startup raspberry pi"
msgstr "Step 1.1 raspberry piの起動"

#: ../../guide/Software.rst:24
msgid "Connect the Raspberry pi to the display with a microHDMI cable."
msgstr "Raspberry piとディスプレイをmicroHDMIケーブルで接続します。"

#: ../../guide/Software.rst:25
msgid "Connect a USB keyboard and mouse to the Raspberry pi."
msgstr "Raspberry piにUSBキーボードとマウスを接続する。"

#: ../../guide/Software.rst:26
msgid ""
"Press and hold the battery button of the Mini Pupper for three seconds to"
" start Raspberry pi."
msgstr "ミニぷぱの電池ボタンを3秒間長押しして、Raspberry piを起動します。"

#: ../../guide/Software.rst:27
msgid ""
"If you can see Ubuntu running on your screen, you have succeeded. You "
"should also see the face on Mini Pupper display."
msgstr "画面上にUbuntuが起動しているのが確認できれば成功です。ミニぷぱのディスプレイにも顔が表示されているはずです。"

#: ../../guide/Software.rst:34
msgid "Step 1.2 Log in"
msgstr "Step 1.2 ログイン"

#: ../../guide/Software.rst:36
msgid "Press ubuntu button on the screen to log in."
msgstr "画面上のubuntuボタンを押し、ログインしてください。"

#: ../../guide/Software.rst:37
msgid "Default username: ubuntu"
msgstr "初期設定のユーザー名：ubuntu"

#: ../../guide/Software.rst:38
msgid "Default password: mangdang"
msgstr "初期パスワード：mangdang"

#: ../../guide/Software.rst:41
msgid "Step 1.3 Set keyboard (Optional)"
msgstr "Step 1.3 キーボードを設定する（オプション）"

#: ../../guide/Software.rst:43
msgid ""
"If you want to change the keyboard type, for an example, Japanese "
"keyboard, you will need this setting. Press the menu button in the bottom"
" left corner and type settings to bring up settings."
msgstr "キーボードの種類を変更したい場合、例えば日本語キーボードの場合、この設定が必要です。左下のメニューボタンを押し、settingsと入力すると設定が表示されます。"

#: ../../guide/Software.rst:48
msgid ""
"Select Region & Language and press + for Input Sources. On the screen "
"that comes up, select the three dots for other and type Japanese to "
"select it. Type Japanese to select it."
msgstr "「地域と言語」を選択し、「入力ソース」の「＋」を押してください。出てきた画面で、その他に3つの点を選択し、日本語を入力して選択します。日本語を入力してください。"

#: ../../guide/Software.rst:52
msgid "Step 1.4 Open ports for ssh (Optional)"
msgstr "Step 1.4 ssh用のポートを開く（オプション）"

#: ../../guide/Software.rst:54
msgid "Attempt to make an ssh connection from your PC to Ubuntu."
msgstr "PCからUbuntuへのssh接続を試みます。"

#: ../../guide/Software.rst:60
msgid ""
"If you are unable to make an ssh connection from your PC, you will need "
"to configure the following, maybe."
msgstr "PCからssh接続ができない場合は、恐らく以下の設定が必要です。"

#: ../../guide/Software.rst:67
msgid "If firewall is not running, do the following."
msgstr "ファイアウォールが正常に動作しない場合は、次のようにしてください。"

#: ../../guide/Software.rst:74
msgid "2. Calibration"
msgstr "2. キャリブレーション"

#: ../../guide/Software.rst:77
msgid "Step 2.1 Leg calibration (not for ROS image)"
msgstr "Step 2.1 脚のキャリブレーション（ROSイメージ用ではない）"

#: ../../guide/Software.rst:78
msgid "Please refer to the below calibration video clip."
msgstr "以下のキャリブレーション動画をご参照ください。"

#: ../../guide/Software.rst:87
msgid ""
"During Mini Pupper calibration, if the servo horn assembly position is "
"not right, it is not easy to calibrate, even break the servo. Please "
"follow the below easy guide(not for ROS image)."
msgstr "ミニぷぱのキャリブレーションを行う際、サーボホーンの組み立て位置がずれていると、キャリブレーションがうまくいかず、サーボを壊してしまう可能性があります。以下のガイドに従ってください（ROSイメージではありません）。"

#: ../../guide/Software.rst:90
msgid "Make sure Mini Pupper is pre-assembled except the 4 legs."
msgstr "ミニぷぱは4本の脚を除き、組み立て済みであることを確認してください。"

#: ../../guide/Software.rst:95
msgid ""
"Power on, double-click on the Calibration Tool icon on your desktop to "
"launch it."
msgstr "電源を入れ、デスクトップ上のCalibration Toolのアイコンをダブルクリックして起動してください。"

#: ../../guide/Software.rst:105
msgid ""
"※ The calibration process is: calibrate each servo --> Press \"Update\" "
"button to save the settings --> Press × to close and save the "
"calibration."
msgstr "キャリブレーションの手順:各サーボをキャリブレーションする → ☑を押して設定を保存する → ×を押してキャリブレーションを終了し保存する となります。"

#: ../../guide/Software.rst:107
msgid ""
"※ Calibrate each servo by moving the bars or click the space postion near"
" the bars."
msgstr "バーを動かすか、バー付近のスペースポストをクリックして、各サーボのキャリブレーションを行います。"

#: ../../guide/Software.rst:109
msgid "※ Reset button: when you hope to re-start from the last time."
msgstr "リセットボタン：前回からの再スタートを希望する場合。"

#: ../../guide/Software.rst:111
msgid "※ Restore button: Restore factory settings and Press × to close."
msgstr "※「リストア］ボタン:工場出荷時の設定に戻す 。×を押して閉じる。"

#: ../../guide/Software.rst:113
msgid ""
"Use the calibration GUI tool to calibrate #1 #4 #7 #10 hip servos to the "
"horizontal position."
msgstr "キャリブレーションGUIツールを使って、#1 #4 #7 #10 のヒップサーボを水平位置にキャリブレーションします。"

#: ../../guide/Software.rst:123
msgid ""
"Then assemble the 4 legs by hand at the right position as the below "
"picture shows."
msgstr "その後、下の写真のように、4本の脚を正しい位置に取り付けます。"

#: ../../guide/Software.rst:128
msgid ""
"Use the calibration GUI tool to optimize the legs position. For each leg,"
" move the bars so that all the legs are at a 45 degree angle. The angle "
"of the legs will change in conjunction with the position of the slide bar"
" on the screen. However, if it does not move, then the steps you have "
"followed are incorrect."
msgstr "キャリブレーションGUIツールで脚の位置を最適化する。各脚について、すべての脚が45度の角度になるようにバーを移動させます。脚の角度は、画面上のスライドバーの位置と連動して変化します。もし動かない場合は、操作間違いが原因だと考えられます。もう一度手順に従って修正しましょう。"

#: ../../guide/Software.rst:130
msgid ""
"You can use the iPhone's tilt sensor app, a ruler or a protractor to "
"measure the angle. I also used a ruler and a protractor."
msgstr "角度を測るには、iPhoneの傾きセンサーアプリや、定規、分度器などが使えます。私も定規と分度器を使ってみました。"

#: ../../guide/Software.rst:135
msgid ""
"It is a little bit difficult to measure the accurate inclination of the "
"legs, so it is better to place the legs on a grid, like a piece of graph "
"paper, to check that they are in the same position from front to back and"
" from side to side, and to make any final adjustments."
msgstr "脚の正確な傾きを測るのは少し難しいので、方眼紙のようなグリッドに脚を置き、前後左右の位置が同じかどうかを確認し、最終調整するのがよいでしょう。"

#: ../../guide/Software.rst:140
msgid ""
"When all legs are at 45° inclination as shown, press Update to save the "
"settings. Press × to close the calibration application."
msgstr "図のようにすべての脚が45°の傾きになったら、Update を押して設定を保存します。×を押して、キャリブレーションアプリケーションを終了します。"

#: ../../guide/Software.rst:144
msgid "Step 2.2 Connect controller"
msgstr "Step 2.2 コントローラーの接続"

#: ../../guide/Software.rst:146
msgid "Please check the next chapter."
msgstr "次の章でご確認ください。"

#: ../../guide/Software.rst:148
msgid "If you can control it with a controller, it's OK."
msgstr "コントローラーで操作できればOKです。"

#~ msgid ""
#~ "In addition to the tools included "
#~ "in the kit, the following items "
#~ "are required for assembly. "
#~ "キットに同梱されている工具の他に、組み立てには以下の物が必要です。"
#~ msgstr ""

#~ msgid "USB keyboard USB キーボード"
#~ msgstr ""

#~ msgid "USB mouse USB マウス"
#~ msgstr ""

#~ msgid "microSD card interface microSDカードリーダ"
#~ msgstr ""

#~ msgid "HDMI Display HDMI ディスプレイ"
#~ msgstr ""

#~ msgid "HDMI micro HDMI convertor HDMI⇔microHDMI変換"
#~ msgstr ""

#~ msgid "microUSB cable microUSB ケーブル"
#~ msgstr ""

#~ msgid ""
#~ "The battery is charged via USB, "
#~ "see picture for USB socket, and "
#~ "can be charged while still attached "
#~ "to the Mini Pupper body. "
#~ "準備としてバッテリーをUSBで充電しておきます。USBの差込口は写真を参照。Mini "
#~ "Pupperに取り付けたままでも充電できます。"
#~ msgstr ""

#~ msgid ""
#~ "You can check other documents or "
#~ "latest image file via the below "
#~ "folder. 以下のフォルダから他のドキュメントや最新のイメージを確認できます."
#~ msgstr ""

#~ msgid ""
#~ "`MiniPupperDocs <https://drive.google.com/drive/folders"
#~ "/17XOR7FHEMkts_zZtZtuQ-QxEJ68U8ZkW?usp=sharing>`_"
#~ msgstr ""

#~ msgid ""
#~ "For the V1 Custom circuit board, "
#~ "the image file "
#~ "20211201_v1.6.1_MiniPupper_PS4_Ubuntu_20.04.2_Baseline.img.zip "
#~ "is shown as below. "
#~ "V1カスタム回路基板の場合、イメージファイルは20211201_v1.6.1_MiniPupper_PS4_Ubuntu_20.04.2_Baseline.img.zipになります。"
#~ msgstr ""

#~ msgid ""
#~ "`20211201_v1.6.1_MiniPupper_PS4_Ubuntu_20.04.2_Baseline.img.zip "
#~ "<https://drive.google.com/file/d/1bkQNjKn2gHwSllTT2VaI62u_6uVW4Dzw/view?usp=sharing/view?usp=sharing>`_"
#~ msgstr ""

#~ msgid ""
#~ "For the V2 Custom circuit board, "
#~ "the image file "
#~ "20220109_v1.7.0_MiniPupper_V2_PS4_Ubuntu_21.10.0_Baseline.img.zip "
#~ "is shown as below. "
#~ "V2カスタム回路基板の場合、イメージファイルは20220109_v1.7.0_MiniPupper_V2_PS4_Ubuntu_21.10.0_Baseline.img.zipになります。"
#~ msgstr ""

#~ msgid ""
#~ "`20220109_v1.7.0_MiniPupper_V2_PS4_Ubuntu_21.10.0_Baseline.img.zip "
#~ "<https://drive.google.com/file/d/1ZYJCfCb-"
#~ "1U71M0wobJEzo1sL0uNgFjqz/view?usp=sharing>`_"
#~ msgstr ""

#~ msgid ""
#~ "\"XXX_MiniPupper_V2_PS4_Ubuntu_XXX.zip\" is image "
#~ "file for the Ubuntu base version "
#~ "for the PS4 controller, while "
#~ "\"MiniPupper2004.zip\" is image file for "
#~ "the Ubuntu + ROS version for SLAM"
#~ " & Navigation.   "
#~ "「XXX_MiniPupper_V2_PS4_Ubuntu_XXX.zip」はPS4コントローラーのUbuntuベースバージョンのイメージファイルであり、「MiniPupper2004.zip」はSLAM＆NavigationのUbuntu"
#~ " + ROSバージョンのイメージファイルです。"
#~ msgstr ""

#~ msgid ""
#~ "Download the image for Raspi 4 "
#~ "from MangDang on your PC.  "
#~ "PCでMangDangからラズパイ4用イメージをダウンロードします。"
#~ msgstr ""

#~ msgid ""
#~ "Insert the microSD card into your "
#~ "PC's SD card reader and pwrite the"
#~ " image. We recommend the image "
#~ "creation tool balenaEtcher as it is "
#~ "easy and reliable. Please refer to "
#~ "the official manual and below link. "
#~ "It may take a while to complete."
#~ " PCのSDカードリーダにmicroSDカードを入れて、イメージを書き込みます。イメージ作成ツール "
#~ "balenaEtcherが簡単かつ確実なのでおすすめです。オフィシャルマニュアルやリンク先を参考に書き込みましょう。完了までかなり時間がかかります。"
#~ msgstr ""

#~ msgid ""
#~ "Reference Link: `Download Etcher – Flash"
#~ " OS images to USB drives & SD"
#~ " cards <https://etcherpc.com/?usp=sharing>`_"
#~ msgstr ""

#~ msgid ""
#~ "参考：`簡単な 3 ステップで使えるブートUSB 作成ツール！「balenaEtcher」 "
#~ "<https://www.gigafree.net/system/os/Etcher.html?usp=sharing>`_"
#~ msgstr ""

#~ msgid ""
#~ "Remove the SD card from the PC "
#~ "and insert it into the Raspberry "
#~ "pi. PCからSDカードを抜いて、ラズパイに挿す。"
#~ msgstr ""

#~ msgid ""
#~ "The pictures show the position of "
#~ "the screws briefly. 写真はネジの位置を簡単に示しています。"
#~ msgstr ""

#~ msgid ""
#~ "(!!! We don’t suggest you use "
#~ "Loctite at first before you have "
#~ "enough experience. !!!) Loctite prevents "
#~ "the nut from loosening, but it is"
#~ " not essential, as it can be "
#~ "tightened only when looseness is "
#~ "noticed. However, some of them have "
#~ "to be dismantled in order to be"
#~ " tightened later, so fix them as "
#~ "much as possible. "
#~ "ロックタイトはナットの緩みを防止しますが、緩みに気づいたときに締めれば良いので必須ではありません。ただ、後から締めるためには一部解体しなければならないものもありますので、極力固定しましょう。"
#~ msgstr ""

#~ msgid "Video Instructions"
#~ msgstr "製作動画"

#~ msgid "|youtu.be-assembly-leg-1|"
#~ msgstr "|youtu.be-assembly-leg-1-ja|"

#~ msgid "Assemble ① and ② / ①と②の組み立て:"
#~ msgstr ""

#~ msgid ""
#~ "Use one M2x5mm screw.The screw is "
#~ "inserted from the bottom of ② "
#~ "upwards and tightened by inserting them"
#~ " into the screw holes in ①. Be"
#~ " careful about the sides of ②. "
#~ "M2x5mm "
#~ "のボルトを1つ使用します。ボルトは②の下から上に挿し、①の穴に挿し込んで締めます。②の表裏の向きに気をつけましょう。"
#~ msgstr ""

#~ msgid ""
#~ "The two ballbearings in ② should "
#~ "be inserted all the way in and "
#~ "the end should be slightly visible "
#~ "as shown in the picture below. Tap"
#~ " the ball bearing and press it "
#~ "in without gaps. "
#~ "②のボールベアリング2個は奥まで挿し込み、下記の写真のように先が少し見える状態になっている必要があります。叩くなどして隙間をなくせば大丈夫です。"
#~ msgstr ""

#~ msgid "Assemble ② and ③ / ②と③の組み立て:"
#~ msgstr ""

#~ msgid ""
#~ "Use an M2x8mm screw and an M2 "
#~ "locknut. Insert the screw from the "
#~ "bottom to the top of ③, pass "
#~ "through ② and tighten with the "
#~ "nut. It is important to pay "
#~ "attention to the orientation of ③. "
#~ "Look carefully at the position of "
#~ "the hole in the middle. M2x8mm "
#~ "のボルトを1つと M2 "
#~ "Locknutを使用します。ボルトを③の下から上に挿し、②を通し、ナットで締めます。③の部品の向きには気をつける必要があります。真ん中の穴の位置を良く見ましょう。"
#~ msgstr ""

#~ msgid "Adjustment of the length of ④ / ④の長さの調整"
#~ msgstr ""

#~ msgid ""
#~ "The length of ④ must match the "
#~ "length of ⑤. When adjusting the "
#~ "length, it is easier to use two"
#~ " long screws, e.g. M2x15mm, to make"
#~ " sure that the lengths match. Once"
#~ " the lengths have been adjusted, take"
#~ " apart all. "
#~ "④の長さが⑤と一致している必要があります。長さを調整するとき、M2x15mmなどの長いボルトを2本使うと、長さが一致しているか確認しやすいです。長さの調整が完了したら、これらはすべてバラしましょう。"
#~ msgstr ""

#~ msgid "Assemble ⑤ and ⑥ / ⑤と⑥の組み立て"
#~ msgstr ""

#~ msgid ""
#~ "Use two M2x5mm screws. Insert the "
#~ "screws into ⑤ first, insert them "
#~ "into the holes of ⑥, and tighten"
#~ " them. The large hole in ⑥ "
#~ "should be facing the surface. "
#~ "M2x5mmのボルトを1本使用します。⑤にボルトを挿し、⑥の穴に挿れて締めます。⑥は大きな穴がある方が表面側に来るように向けましょう。"
#~ msgstr ""

#~ msgid "Assemble ⑤ and ⑦ / ⑤と⑦の組み立て"
#~ msgstr ""

#~ msgid ""
#~ "Use an M2x12mm screw, an M2 "
#~ "locknut and two sets of ball "
#~ "bearings. Each ball bearing is made "
#~ "up of three parts, the top and "
#~ "bottom parts with the grooved side "
#~ "facing inwards. Insert a screw into "
#~ "a set of ball bearing. Then insert"
#~ " the screw into the hole ⑦. "
#~ "Taking care to look at the warped"
#~ " side of ⑦ to make sure it "
#~ "is facing the right way. Now screw"
#~ " in the another set of ball "
#~ "bearing. Finally, insert screw into ⑤"
#~ " and tighten it with the nut. "
#~ "M2x12mmのボルトとM2 "
#~ "locknutとボールベアリング2組を使用します。ボールベアリングは3つの部品から成り立っており、上下の部品は溝がある方を内側に向けて、真ん中の部品をはさみます。まずボールベアリングにボルトを通します。次に⑦の穴にボルトを挿します。このとき⑦の反っている方向を見て、向きを間違えないように気をつけます。次にもう一つのボールベアリングをボルトに通します。最後に⑤をボルトに通してナットで締めます。"
#~ msgstr ""

#~ msgid "Assemble ④ and ⑦ / ④と⑦の組み立て"
#~ msgstr ""

#~ msgid ""
#~ "Use an M2x8mm screw and an M2 "
#~ "nut. Insert the screw into ⑦ and"
#~ " put ④ through, then tighten it "
#~ "with the nut. The direction of the"
#~ " front and back of ④ can be "
#~ "either. "
#~ "M2x8mmのボルトとM2ナットを使用します。⑦にボルトを挿し、④を通したら、ナットで締めます。④の表裏の向きはどちらでも大丈夫です。"
#~ msgstr ""

#~ msgid "Assemble ③ and ④ / ③と④の組み立て"
#~ msgstr ""

#~ msgid ""
#~ "Use an M2x8mm screw and an M2 "
#~ "nut. Insert the screw into ③ and"
#~ " put ④ through, then tighten it "
#~ "with the nut. "
#~ "M2x8mmのボルトとM2ナットを使用します。③にボルトを挿し、④を通したら、ナットで締めます。"
#~ msgstr ""

#~ msgid "Assemble ③ and ⑤ / ③と⑤の組み立て"
#~ msgstr ""

#~ msgid ""
#~ "Use M2x14mm screws and two sets of"
#~ " ball bearings. Thread the screws "
#~ "through the bearings, ③, bearings, ⑤,"
#~ " in that order. The screws are "
#~ "not fixed, but you will tighten "
#~ "them when you mount the servo in"
#~ " the next step. "
#~ "M2x14mmのボルトとボールベアリング2組を使用します。ボルトをベアリング、③、ベアリング、⑤の順で通します。ボルトは固定されていませんが、次工程でサーボに取り付ける際にボルトを締めます。"
#~ msgstr ""

#~ msgid "Completion of a right leg / 脚部の仕上げ"
#~ msgstr ""

#~ msgid "Front side / 表"
#~ msgstr ""

#~ msgid ""
#~ "Now we have one leg on the "
#~ "right side. Here are some pictures "
#~ "so you can see it from different"
#~ " angles. The left leg should be "
#~ "symmetrical with the right one. "
#~ "これで右側の脚が一本完成しました。色んな角度から見れるように写真を貼っておきます。左側は右側と線対称になるように組みます。"
#~ msgstr ""

#~ msgid "opposite side / 裏"
#~ msgstr ""

#~ msgid ""
#~ "As the nut is on a moving "
#~ "joint, it will loosen quickly if "
#~ "tightened too tightly. They should be"
#~ " secured with Loctite. It is possible"
#~ " to dismantle the nut later, as "
#~ "it can be loosened by a strong "
#~ "force. "
#~ "ナットは動く関節にあるので、ナットを強く締めても直ぐに緩んでしまいます。ロックタイトで固定しましょう。なお、ロックタイトで固定されたナットは強い力ならば緩められるので、あとから解体も可能です。"
#~ msgstr ""

#~ msgid "Elongated screwdriver/ 細長いプラスドライバー"
#~ msgstr ""

#~ msgid "Elongated hex wrench (2mm) / 細長い2mm経の六角レンチ"
#~ msgstr ""

#~ msgid "Loctite / ロックタイト"
#~ msgstr ""

#~ msgid "Thin things like a toothpick / 爪楊枝のような細いもの"
#~ msgstr ""

#~ msgid "M2x6mm(Self tapping)  1x4=4"
#~ msgstr ""

#~ msgid "M2x6mm        1x4+4x4=20"
#~ msgstr ""

#~ msgid ""
#~ "※ For the latest kit, there are"
#~ " two kinds of servo cables, "
#~ "No.1,4,7,10 cables length is 9cm, other"
#~ " cables length is 15cm. "
#~ "最新のキットには、サーボケーブルが2種類あります。No.1、4、7、10のケーブル長は9cm、その他のケーブル長は15cmです。"
#~ msgstr ""

#~ msgid ""
#~ "The position of each servomotors are "
#~ "shown as below. 各サーボモータの位置は以下のとおりです。"
#~ msgstr ""

#~ msgid ""
#~ "There are four hips to assemble, "
#~ "all with different shapes. Here shows"
#~ " how to assemble the rear right "
#~ "hip. 臀部(でんぶ)は4個組み立てますが、全て部品の向きが異なります。右後ろの臀部の組立方法を紹介します。"
#~ msgstr ""

#~ msgid "Servo horn サーボホーン"
#~ msgstr ""

#~ msgid "Insert a servo horn to a servo. サーボホーンを挿す。"
#~ msgstr ""

#~ msgid "Assemble servo horn and hip parts サーボホーンと臀部部品の組み立て"
#~ msgstr ""

#~ msgid ""
#~ "Use an M2x6mm Tapping screw and an"
#~ " M2x6mm screw. You will need a "
#~ "long cross-head screwdriver and a "
#~ "2 mm hexagonal wrench. "
#~ "M2x6mm(タッピング)とM2x6mmを使用します。長い十字ドライバーと2mmの六角レンチが必要です。"
#~ msgstr ""

#~ msgid "Put two servos into hip parts サーボ2つを臀部部品に入れる。"
#~ msgstr ""

#~ msgid ""
#~ "※ You may need to clean the "
#~ "residue around the holes in the 3D"
#~ " printed part at first. Make sure "
#~ "the servo mounting surface is flat. "
#~ "最初に、3Dプリントされたパーツの穴の周りの残留物をきれいにする必要があるかもしれません。サーボ取付面が平らであることを確認してください。"
#~ msgstr ""

#~ msgid ""
#~ "Insert two servo into the box and"
#~ " fix them with M2x6mm screws. "
#~ "2つのサーボを箱にはめて、M2x6mmのボルト4本で固定します。"
#~ msgstr ""

#~ msgid "Assemble leg and hip 脚部を臀部に取り付ける"
#~ msgstr ""

#~ msgid ""
#~ "Attach the leg to the hip using"
#~ " the M2x12mm screws. Leg is tilted"
#~ " at approximately 45°, as shown in"
#~ " the manual. "
#~ "M2x12mmのボルトを使って、脚を臀部に取り付けます。マニュアルの通り、脚がだいたい45度傾くように取り付けます。"
#~ msgstr ""

#~ msgid ""
#~ "Tighten the screws with Loctite. Use "
#~ "a toothpick to apply Loctite to "
#~ "the servo's screw holes. "
#~ "ロックタイトでボルトをしっかりと固定しましょう。爪楊枝を使ってサーボの穴にロックタイトを塗っておきます。"
#~ msgstr ""

#~ msgid "Screwdriver / プラスドライバー"
#~ msgstr ""

#~ msgid "Superglue / 瞬間接着剤※"
#~ msgstr ""

#~ msgid "Masking tape / マスキングテープ※"
#~ msgstr ""

#~ msgid ""
#~ "※ These are not essential. Use in"
#~ " case of trouble or when more "
#~ "strength is required. "
#~ "必須ではありません。トラブル時やより強度を求める場合に使用します。"
#~ msgstr ""

#~ msgid "M2x8mm        4+4=8"
#~ msgstr ""

#~ msgid "M3x8mm        2+2=4"
#~ msgstr ""

#~ msgid "M2x5mm        8+8+4=20"
#~ msgstr ""

#~ msgid ""
#~ "Use four M2x8mm screws. It is "
#~ "useful to put masking tape on the"
#~ " cables and write the number of "
#~ "servomotors during this process to make"
#~ " it easier later. "
#~ "M2x8mmのボルト4本を使って取り付けます。この工程でケーブルにマスキングテープを貼り番号を書くと、後で楽です。"
#~ msgstr ""

#~ msgid ""
#~ "Tighten the two M3x8mm screws with "
#~ "a screwdriver. The front part is "
#~ "designed to hold the LCD screen. "
#~ "Make sure you don't mistake it for"
#~ " the rear part. "
#~ "M3x8mmの皿ネジ2本をプラスドライバーで締めます。前面パーツは液晶画面が入る形になっています。後部パーツと間違えないようにしましょう。"
#~ msgstr ""

#~ msgid "The same procedure as for the front part. 前部と同じ要領です。"
#~ msgstr ""

#~ msgid ""
#~ "Use eight M2x5mm screws. The orientation"
#~ " of the plate must be such that"
#~ " the hole is at the front. "
#~ "M2x5mmのボルトを8本使用します。プレートの向きは、写真のように、前の方に穴が来る必要があります。"
#~ msgstr ""

#~ msgid ""
#~ "Use four M2x5mm screws and four "
#~ "short supports. M2x5mmのボルト4本と短い支柱4本を使用します。"
#~ msgstr ""

#~ msgid "Step 5.6 Top plate"
#~ msgstr "上部"

#~ msgid ""
#~ "Use eight M2x5mm screws. The orientation"
#~ " of the plate must be such that"
#~ " the large opening is at the "
#~ "front. M2x5mmのボルトを8本使用します。プレートの向きは、写真のように、前の方に大きな開口部が来る必要があります。"
#~ msgstr ""

#~ msgid "6. Assemble the function component"
#~ msgstr "他のモジュール"

#~ msgid "Screwdriver プラスドライバー"
#~ msgstr ""

#~ msgid "M2x5mm        2"
#~ msgstr ""

#~ msgid "M2x8mm        2"
#~ msgstr ""

#~ msgid "M1.4x3mm(皿)  4"
#~ msgstr ""

#~ msgid "Step 6.1 Display 画面"
#~ msgstr ""

#~ msgid ""
#~ "Use two M2x5mm screws. Remove the "
#~ "protective sheet for the display. Fold"
#~ " the thin flexible cable at the "
#~ "edge of the display. Attach the "
#~ "board and the display to the main"
#~ " unit. When attaching the display, "
#~ "you can use a stick to gently "
#~ "push the flexible cable, so that "
#~ "it goes as far back as possible."
#~ " "
#~ "M2x5mmのボルト2本を使用します。ディスプレイの保護シールはここで取りましょう。ディスプレイと専用基板の間に通る薄いフレキシブルケーブル(通称フレキ)をディスプレイの端で折ります。基板、ディスプレイの順に本体に取り付けます。ディスプレイを取り付ける際に、フレキがなるべく奥にいくように棒状の物で軽く押すと良いです。"
#~ msgstr ""

#~ msgid ""
#~ "Use four M1.4x3mm countersunk screws. Be"
#~ " careful with the yellow parts as "
#~ "it has a front and back. "
#~ "M1.4x3mmの皿ネジを4本使用します。黄色いパーツには表裏の区別があるので気をつけましょう。"
#~ msgstr ""

#~ msgid ""
#~ "Install the battery pack. Be careful "
#~ "of the front and rear orientation. "
#~ "Fit the battery from the bottom to"
#~ " the top, then slide it backwards "
#~ "and secure it. Pass the cable "
#~ "through the hole in the bottom "
#~ "plate and bring it up to the "
#~ "top. "
#~ "バッテリーパックを取り付けます。前後の向きに気をつけましょう。底からバッテリーを上にはめて、後ろにぐっとずらし固定します。ケーブルを底のプレートの穴に通し、上まで持ってきます。"
#~ msgstr ""

#~ msgid ""
#~ "Use four long supports. First, plug "
#~ "the display cable into the custom "
#~ "circuit board. Then, plug in the "
#~ "battery cable. This connector may "
#~ "interfere with the hips parts, so "
#~ "you have to slide it through a "
#~ "hole in the middle of the board"
#~ " as temporary solution. Next, you "
#~ "need to insert the 12 servo "
#~ "cables. In the picture, you can "
#~ "see: J1,J2,J3.... . J12. After inserting"
#~ " the 12 cables, pull the custom "
#~ "circuit board closer to the body. "
#~ "The board may float, but you can"
#~ " use four long posts to hold it"
#~ " in place. "
#~ "長い支柱4本を使用します。最初にディスプレイのケーブルをカスタム回路基板に挿します。次にバッテリーのケーブルを挿します。このコネクタが臀部パーツに干渉する恐れがあるので、（暫定対策として）このコネクタを基板の真ん中の穴に通して逃しておきます。次にサーボのケーブルを12本挿します。写真で説明すると、J1,J2,J3...J12順番の通りに挿していきます。茶色がGNDなので全て手前になるように挿しましょう。12本のケーブルを挿したらカスタム回路基板をぐっと力を入れてボティに近づけます。ケーブルの反発で基板が浮いてきますが、長い支柱を4本挿して固定しましょう。"
#~ msgstr ""

#~ msgid ""
#~ "※ Need to pay attention to the "
#~ "cable of the No. 1 servo to "
#~ "prevent it from being overwhelmed. "
#~ "No.1サーボのケーブルに圧倒されないように注意する必要があります。"
#~ msgstr ""

#~ msgid "Step 6.5 Fan"
#~ msgstr ""

#~ msgid ""
#~ "Use two M2x8mm screws. To install "
#~ "the fan. M2x8mmのボルト2本を使用します。ファンを取り付けます。"
#~ msgstr ""

#~ msgid "Step 6.6 Raspberry Pi 4"
#~ msgstr ""

#~ msgid "Tools 工具"
#~ msgstr "ツール"

#~ msgid "Bolt to use 使用するボルト"
#~ msgstr "使用するボルト"

#~ msgid "M1.4x3mm      4x2=8"
#~ msgstr ""

#~ msgid "M2x4mm        2x4=8"
#~ msgstr ""

#~ msgid "M2x10mm       4+4=8"
#~ msgstr ""

#~ msgid "Use eight M1.4x3mm countersunk screws. M1.4x3mmの皿ネジを8本使用します。"
#~ msgstr ""

#~ msgid "Use four M2x10mm countersunk screws. M2x10mmのボルトを4本使用します。"
#~ msgstr ""

#~ msgid ""
#~ "Use 8 x M2x4mm screws. Insert only"
#~ " the screws first and then insert "
#~ "the shoulder parts into the gap. "
#~ "Insert the 2 mm hex driver into"
#~ " the hole in the shoulder part "
#~ "and tighten the screws. "
#~ "M2x4mmボルトを8本使用します。先にボルトだけ挿し、その隙間に肩パーツを差し込みます。肩パーツの穴に2mm六角レンチを入れてボルトを締めます。"
#~ msgstr ""

#~ msgid ""
#~ "Use four M2x10mm screws; if the "
#~ "holes are too small to fit the "
#~ "screws, as the part is made with"
#~ " a 3D printer, you can enlarge "
#~ "the holes by turning them with the"
#~ " supplied 2mm hexagonal screwdriver. "
#~ "M2x10mmボルトを4本使用します。3Dプリンタで作られたパーツなので、穴が小さくボルトが入らない場合は、付属の2mm六角ドライバでグリグリと回して穴を大きくしましょう。"
#~ msgstr ""

#~ msgid "Put on 4 shoes. 靴を4つ履く"
#~ msgstr ""

#~ msgid "Expansion functions"
#~ msgstr "拡張機能"

#~ msgid "Prerequisites"
#~ msgstr ""

#~ msgid "HDMI ポート付きのディスプレイ"
#~ msgstr ""

#~ msgid "ディスプレイ用のダプター"
#~ msgstr ""

#~ msgid "HDMI ケーブル"
#~ msgstr ""

#~ msgid "マウスとキーボード"
#~ msgstr ""

#~ msgid "顔用の写真および写真ファイルが入っている USB メモリ"
#~ msgstr ""

#~ msgid "2. Gait Performance"
#~ msgstr ""

#~ msgid ""
#~ "Connect the PS4 controller to the "
#~ "Pi by putting it pairing mode. "
#~ "コントローラーをペアリングモードにしてRaspberry Piに接続します。"
#~ msgstr ""

#~ msgid ""
#~ "To put it into pairing mode, hold"
#~ " the share button and circular "
#~ "Playstation button at the same time "
#~ "until it starts making quick double "
#~ "flashes. "
#~ "ペアリングモードにするには、「SHARE」ボタンと中央のPSボタンを同時に3秒以上長押しします。その後、ライトが2回点滅し始めます。"
#~ msgstr ""

#~ msgid ""
#~ "If it starts making slow single "
#~ "flashes, hold the Playstation button "
#~ "down until it stops blinking and "
#~ "try again. "
#~ "もし、ゆっくりと1回点滅し始めた場合、点滅が止まるまでPSボタンを押し続けて、もう一度やり直してください。"
#~ msgstr ""

#~ msgid ""
#~ "Wait until the controller binds to "
#~ "the robot, at which point the "
#~ "controller should turn a dim green "
#~ "(or whatever color you chose in "
#~ "pupper/HardwareConfig.py for the deactivated "
#~ "color). コントローラーが本体に接続されるまで待ちます。"
#~ msgstr ""

#~ msgid ""
#~ "Press L1 on the controller to "
#~ "\"activate\" the robot. The controller "
#~ "should turn bright green (or again, "
#~ "whatever you chose in HardwareConfig). "
#~ "コントローラーのL1を押して、本体を「アクティブ化」します。 ここでコントローラーライトは明るい緑色に変わります。"
#~ msgstr ""

#~ msgid ""
#~ "You're good to go! Check out the"
#~ " controls section below for operating "
#~ "instructions. 上記で準備が完了です。操作手順については、以下の制御セクションを確認してください。"
#~ msgstr ""

#~ msgid ""
#~ "L1: Press to toggle active mode "
#~ "and deactivate mode. "
#~ "L1を押し、アクティブモードと非アクティブモードに切り替えます。"
#~ msgstr ""

#~ msgid ""
#~ "Note: the PS4 controller's front light"
#~ " will change colors to indicate if"
#~ " the robot is deactivated or "
#~ "activated. コントローラーのライトは、本体がアクティブ化されているか、されていないかを示すために色が変わります。"
#~ msgstr ""

#~ msgid ""
#~ "R1: Press to transition between Rest "
#~ "mode and Trot mode. "
#~ "R1を押して、レストモードとトロットモードに切り替えます。"
#~ msgstr ""

#~ msgid "Left joystick　左スティック"
#~ msgstr ""

#~ msgid ""
#~ "Forward/back　前進/後退: moves the robot "
#~ "forward/backwards when in Trot mode. "
#~ "トロットモード時、本体を前進/後退させます"
#~ msgstr ""

#~ msgid ""
#~ "Left/right 左/右: moves the robot "
#~ "left/right when in Trot mode. "
#~ "トロットモード時、本体を左/右に動かします。"
#~ msgstr ""

#~ msgid "Right joystick 右スティック"
#~ msgstr ""

#~ msgid ""
#~ "Forward/back 前方/後方: pitches the robot "
#~ "forward and backward. 本体を前方および後方にピッチングします。"
#~ msgstr ""

#~ msgid "Left/right 左/右: turns the robot left and right. 本体を左右に回転させます。"
#~ msgstr ""

#~ msgid "D-Pad 十字キー"
#~ msgstr ""

#~ msgid "Forward/back 前後: raises and lowers the body. 体を上げ下げします。"
#~ msgstr ""

#~ msgid "Left/rights 左/右: rolls the body left/right. 体を左/右に回転させます。"
#~ msgstr ""

#~ msgid ""
#~ "\"X\" button 「X」ボタン: Press it three "
#~ "times to complete a full hop. "
#~ "3回押すと、ジャンプします。"
#~ msgstr ""

#~ msgid "Power off  電源オフ"
#~ msgstr ""

#~ msgid ""
#~ "※ Note that a broken SD card "
#~ "will not be restored... It's a bit"
#~ " of a pain, but you can end "
#~ "it with a command. After about 30"
#~ " seconds, it will shut down and "
#~ "you can press and ※ hold the "
#~ "button on the bottom to turn it"
#~ " off. "
#~ "壊れたSDカードは元に戻りません…。面倒ですが、コマンドで終了しましょう。30秒ほどすればシャットダウン完了しますので、底面のボタンを長押しして電源を止めます。"
#~ msgstr ""

#~ msgid ""
#~ "※ You can shutdown Ubuntu by "
#~ "pressing and holding the triangle "
#~ "button. △ボタンを長押しでUbuntuをシャットダウンできます。"
#~ msgstr ""

#~ msgid ""
#~ "PS4 controller pairing instructions (repeat"
#~ " of instructions above) "
#~ "コントローラーのペアリング手順（上記の手順の繰り返し）"
#~ msgstr ""

#~ msgid ""
#~ "To put it into pairing mode, hold"
#~ " the share button and circular "
#~ "Playstation button at the same time "
#~ "until it starts making quick double "
#~ "flashes. "
#~ "ペアリングモードにするには、「SHARE」ボタンと中央のPSボタンを同時に押し続けます。その後、ライトが2回点滅し始めます。"
#~ msgstr ""

#~ msgid "Battery voltage バッテリー電圧"
#~ msgstr ""

#~ msgid ""
#~ "If you power the robot with "
#~ "anything higher than 8.4V (aka >2S) "
#~ "you'll almost certainly fry all your "
#~ "expensive servos! 8.4V（別名> "
#~ "2S）を超えるものでロボットに電力を供給すると、すべての高価なサーボが壊れてしまう可能性が高くなります。"
#~ msgstr ""

#~ msgid ""
#~ "Please note that a lipo battery "
#~ "alarm is attached to the battery "
#~ "to indicate that the battery is "
#~ "exhausted when starting the robot. "
#~ "本体を起動する際、バッテリーが消耗したことを提示するため、バッテリーにリポバッテリーアラームを取り付けているので、ご注意ください。"
#~ msgstr ""

#~ msgid ""
#~ "Also note that you should attach a"
#~ " lipo battery alarm to your battery"
#~ " when running the robot so that "
#~ "you are know when the battery is"
#~ " depleted. Discharging your battery too "
#~ "much runs the risk of starting a"
#~ " fire, especially if you try to "
#~ "charge it again after it's been "
#~ "completely discharged. A good rule-"
#~ "of-thumb for know when a lipo "
#~ "is discharged is checking whether the"
#~ " individual cell voltages are below "
#~ "3.6V. "
#~ "完全に放電した後、再度充電する際など、バッテリーの放電が多すぎると、火災が発生する危険性があります。バッテリーがいつ放電されるかを知るための経験則は、個々のセル電圧が3.6V未満であるかどうかをチェックすることです。"
#~ msgstr ""

#~ msgid ""
#~ "The robot will walk much more "
#~ "poorly when the battery is mostly "
#~ "discharged since a lower voltage is "
#~ "going to the motors. "
#~ "また、モーターへの電圧が低くなるため、バッテリーが大概放電していると、ロボットの歩行が鈍くなります。"
#~ msgstr ""

#~ msgid ""
#~ "Software setup for the SLAM & "
#~ "Navigation functions. SLAM & "
#~ "Navigation機能のソフトウェアセットアップ。"
#~ msgstr ""

#~ msgid "1. Things to prepare 準備するもの"
#~ msgstr ""

#~ msgid "PC（OS：Ubuntu20.04）"
#~ msgstr ""

#~ msgid "New SD card 新しいSDカード"
#~ msgstr ""

#~ msgid ""
#~ "Wi-Fi(PC and MiniPupper must be on"
#~ " the same network) Wi-"
#~ "Fiの環境（PCとMiniPupperを同じネットワークにする必要ある）"
#~ msgstr ""

#~ msgid "2. Setup on the PC side PC側の環境セットアップ"
#~ msgstr ""

#~ msgid "Step 2.1 Download the image  イメージのダウンロード"
#~ msgstr ""

#~ msgid ""
#~ "\"MiniPupper2004.zip\" is zip file of "
#~ "the image for the Ubuntu + ROS "
#~ "version for SLAM & Navigation. Download"
#~ " and unzip the zip "
#~ "file.「MiniPupper2004.zip」はSLAM＆NavigationのUbuntu + "
#~ "ROSバージョンのイメージのzipファイルです。ファイルをダウンロードして、解凍します。"
#~ msgstr ""

#~ msgid ""
#~ "`MiniPupper2004.zip <https://drive.google.com/file/d"
#~ "/11zeivhN-fyTMdf6iuhcVD-Ib6aKj7s_5/view?usp=sharing>`_"
#~ msgstr ""

#~ msgid "Step 2.2 Write the image into microSD microSDにイメージを書く"
#~ msgstr ""

#~ msgid ""
#~ "Here we introduce the method of "
#~ "writing the image into microSD through"
#~ " Raspberry Pi's Imager. "
#~ "ここでは、RaspberryPiのImagerを使用してイメージをmicroSDに書き込む方法を紹介します。"
#~ msgstr ""

#~ msgid ""
#~ "Install the Imager tool of the "
#~ "Raspberry Pi. RaspberryPiのImagerツールをインストール"
#~ msgstr ""

#~ msgid "Write the image into the new SD card.  新しいSDカードにイメージを書き込みます。"
#~ msgstr ""

#~ msgid "Step 2.3 Install ROS noetic ROS noeticをインストールする"
#~ msgstr ""

#~ msgid ""
#~ "You can skip this step if you "
#~ "have already installed ROS noetic. "
#~ "Basically you can follow the "
#~ "instructions on "
#~ "http://wiki.ros.org/noetic/Installation/Ubuntu. ROS "
#~ "noeticをすでにインストールしている場合は、この手順をスキップできます。基本的に、http://wiki.ros.org/noetic/Installation/Ubuntu"
#~ " の指示に従うことができます。"
#~ msgstr ""

#~ msgid "Step 2.4 Cartographer_ros environment setup Cartographer_rosの環境セットアップ"
#~ msgstr ""

#~ msgid ""
#~ "Step 2.5 Compile the package for "
#~ "Mini Pupper ROS Mini Pupper "
#~ "ROS用のパッケージをコンパイル"
#~ msgstr ""

#~ msgid ""
#~ "Download the required package `mnpp_ws.zip "
#~ "<https://drive.google.com/file/d/1gbuvy29hNnS3Ep2o_uR8qAYnFKkr7Dj4/view?usp=sharing>`_"
#~ "  and unzip it to home. 必要なパッケージ "
#~ "`mnpp_ws.zip "
#~ "<https://drive.google.com/file/d/1gbuvy29hNnS3Ep2o_uR8qAYnFKkr7Dj4/view?usp=sharing>`_"
#~ " をダウンロードして、homeに解凍します。"
#~ msgstr ""

#~ msgid "Compile the package. パッケージをコンパイルします。"
#~ msgstr ""

#~ msgid "Step 2.6 Network setup ネットワークのセットアップ"
#~ msgstr ""

#~ msgid ""
#~ "Connect your PC and MiniPupper to "
#~ "the same WiFi and find the IP "
#~ "address assigned by the command "
#~ "ifconfig. "
#~ "PCとMiniPupperを同じWiFiに接続して、コマンドifconfigで割り当てられたIPアドレスを見つけます。"
#~ msgstr ""

#~ msgid "Open the bashrc file. bashrcファイルを開きます。"
#~ msgstr ""

#~ msgid ""
#~ "Update the ROS IP settings with "
#~ "the following command to add the "
#~ "master and hostname configuration in the"
#~ " bashrc file. "
#~ "以下のコマンドでROSのIP設定を更新して、マスターとホスト名の構成をbashrcファイルに追加します。"
#~ msgstr ""

#~ msgid ""
#~ "※ 192.168.1.7 is the IP of the "
#~ "PC. you need to enter the IP "
#~ "of your PC. 192.168.1.7はPCのIPです。 "
#~ "PCのIPを入力する必要があります。"
#~ msgstr ""

#~ msgid "Source the .bashrc file."
#~ msgstr ""

#~ msgid "3. Setup on the MiniPupper side MiniPupper側の環境セットアップ"
#~ msgstr ""

#~ msgid "Step 3.1 Replace the new SD card 新しいSDカードを入れ替わる"
#~ msgstr ""

#~ msgid "Step 3.2 Attach Lidar Lidarの取り付け"
#~ msgstr ""

#~ msgid ""
#~ "※ You can use a shorter USB "
#~ "cable to connect the Lidar and "
#~ "MiniPupper. もっと短いUSBケーブルを使用して、LidarとMiniPupperを接続できます。"
#~ msgstr ""

#~ msgid ""
#~ "Place Lidar on the Stand and "
#~ "tighten with tapping screws (2 pieces)."
#~ "  Lidarを台の上に載せて、タッピングビス（2個）で締めます。"
#~ msgstr ""

#~ msgid "Attach Lidar to Mini Pupper LidarをMiniPupperに取り付ける"
#~ msgstr ""

#~ msgid "Step 3.3 Network setup ネットワークのセットアップ"
#~ msgstr ""

#~ msgid ""
#~ "Connect the MiniPupper to the HDMI "
#~ "display, then power on. "
#~ "MiniPupperをHDMIディスプレイに接続し、電源を入れます。"
#~ msgstr ""

#~ msgid ""
#~ "※ 192.168.1.4 is the IP of the "
#~ "raspberry Pi. you need to enter "
#~ "the IP of your raspberry Pi. "
#~ "192.168.1.4はラズベリーパイのIPです。 ラズベリーパイのIPを入力する必要があります。"
#~ msgstr ""

#~ msgid "Step 3.4 Automatic time update settings 時間の自動更新の設定"
#~ msgstr ""

#~ msgid "Set the correct time zone to your country. お住まいの国に正しいタイムゾーンを設定してください。"
#~ msgstr ""

#~ msgid "The video is shown as below. ビデオは以下のように表示されます。"
#~ msgstr ""

#~ msgid "Step 3.5 Modify the IO settings IO設定の変更"
#~ msgstr ""

#~ msgid ""
#~ "You need to change the IO settings"
#~ " if you use the V2 custom "
#~ "circut board. If you use the V1"
#~ " verson, you can skip. "
#~ "V2カスタム基板を使用する場合はIO設定を変更する必要があります。V1バージョンを使用する場合は、スキップしてください。"
#~ msgstr ""

#~ msgid "Step 3.6 Calibrate the servomotor サーボモーターのキャリブレーション"
#~ msgstr ""

#~ msgid ""
#~ "Here we introduce how to calibrate "
#~ "the servomotors of MiniPupper through "
#~ "SSH after MiniPupper and PC connected"
#~ " to the same WiFi. "
#~ "ここでは、MiniPupperとPCを同じWiFiに接続した後、SSHを介してMiniPupperのサーボモーターを調整する方法を紹介します。"
#~ msgstr ""

#~ msgid "Enter the roscore command on the PC side. PC側でroscoreコマンドを入れます。"
#~ msgstr ""

#~ msgid ""
#~ "Access MiniPupper with ssh on the "
#~ "PC side. Enter the command on the"
#~ " PC side. PC側sshでMiniPupperをアクセスします。PC側でコマンドを入れます。"
#~ msgstr ""

#~ msgid ""
#~ "The target posture of calibration is "
#~ "shown as follows. To save power, "
#~ "you can disconnect the Lidar USB "
#~ "cable. カリブレーションの目標姿勢は以下のようになります。電力を節約するために、Lidar "
#~ "USBケーブルを外すことができます。"
#~ msgstr ""

#~ msgid "4. Run MiniPupper ミニぷぱを動かす"
#~ msgstr ""

#~ msgid ""
#~ "MiniPupper can be controlled with "
#~ "Keyboard or PS4 controller. "
#~ "ミニぷぱはキーボードまたはPS4コントローラーで制御できます。"
#~ msgstr ""

#~ msgid "Step 4.1 Control from the keyboard of PC. PCのキーボードからの制御"
#~ msgstr ""

#~ msgid ""
#~ "Enter the keyboard control node command"
#~ " on the PC side. PC側でキーボード制御ノードコマンドを入力します。"
#~ msgstr ""

#~ msgid "The operation video is shown as below. 操作動画は以下のとおりです。"
#~ msgstr ""

#~ msgid "Step 4.2 Control from the PS4 controller. PS4コントローラーでの制御"
#~ msgstr ""

#~ msgid ""
#~ "Enter the PS4 control node command "
#~ "on the MiniPupper side. "
#~ "ミニぷぱ側でPS4制御ノードコマンドを入力します"
#~ msgstr ""

#~ msgid ""
#~ "Next, pair with PS4 (wait for "
#~ "about 5 seconds). The joystick on "
#~ "the left controls driving forward, "
#~ "backward, left and right. The joystick"
#~ " on the right controls rotation. The"
#~ " cross key controls the standing "
#~ "height and the angle of the roll"
#~ " axis. If you are pressing R2, "
#~ "use the right joystick to control "
#~ "the pitch angle and yaw axis. "
#~ "Press L2 and the robot will return"
#~ " to its default state. "
#~ "次に、PS4とのペアリングモードします（5秒ぐらい待つ）。左のジョイスティックは前後左右の走行を制御します。右のジョイスティックは回転を制御します。十字キーは、立っている高さとロール軸の角度を制御します。R2を押している場合は、右のジョイスティックでピッチ角とヨー軸を制御します。L2を押すと、ロボットはデフォルトの状態に戻ります。"
#~ msgstr ""

#~ msgid "5. Create a 2D map 2D地図作成"
#~ msgstr ""

#~ msgid "Step 5.1 Start cartographer on the PC side PC側でcartographerを起動する"
#~ msgstr ""

#~ msgid "Step 5.2 MiniPupper setup ミニぷぱセットアップ"
#~ msgstr ""

#~ msgid "※ Lidar USB plugged state.  LidarUSBが接続された状態。"
#~ msgstr ""

#~ msgid "Step 5.3 Create map 地図作成"
#~ msgstr ""

#~ msgid ""
#~ "Run MiniPupper on the PC side to"
#~ " create a 2D map (using the "
#~ "operation from the Keyboard as an "
#~ "example). PC側でMiniPupperを動かして、２D地図を作成します（Keyboardからの操作を例とする）。"
#~ msgstr ""

#~ msgid "Step 5.4 Save the 2D map on the PC side PC側で２D地図の保存"
#~ msgstr ""

#~ msgid "Video of PC operation PC操作の動画"
#~ msgstr ""

#~ msgid "Actual machine video 実機動画"
#~ msgstr ""

#~ msgid "6. Navigation ナビゲーション"
#~ msgstr ""

#~ msgid "Step 6.1 Move the saved mapto the related folder 保存したマップを関連フォルダに移動"
#~ msgstr ""

#~ msgid ""
#~ "Move the saved map.pbstream, map.pgm and"
#~ " map.yaml to src/minipupper_ros/mini_pupper/maps "
#~ "on your PC. 保存できた map.pbstream / "
#~ "map.pgm / map.yaml は、 PC "
#~ "の、src/minipupper_ros/mini_pupper/maps に移動します。"
#~ msgstr ""

#~ msgid "Step 6.2  Execute Navigation Launch on the PC side PC側でナビゲーション起動を実行"
#~ msgstr ""

#~ msgid ""
#~ "Continued from step 5.1 (after closing"
#~ " roslaunch mini_pupper slam.launch with ctl"
#~ " + c). 手順5.1から続行します（ctl + "
#~ "cを使用してroslaunchmini_pupper slam.launchを閉じた後）。"
#~ msgstr ""

#~ msgid "Step 6.3 Set the target position 目標位置を設定する"
#~ msgstr ""

#~ msgid ""
#~ "On the PC side, specify the target"
#~ " of the map where rviz is "
#~ "displayed. PC側で、rvizが表示される地図の目標位置を設定します。"
#~ msgstr ""

#~ msgid "Step 6.4  Autonomous driving 自律走行"
#~ msgstr ""

#~ msgid "7. Others その他"
#~ msgstr ""

#~ msgid "Let's install an ordinary USB camera. 普通のUSBカメラを搭載してみよう。"
#~ msgstr ""

#~ msgid "Step 7.1 PC side　PC側"
#~ msgstr ""

#~ msgid "Step 7.2 MiniPupper side ミニぷパ側"
#~ msgstr ""

#~ msgid "Step 7.3 PC side　PC側"
#~ msgstr ""

#~ msgid "Launch rqt_image_view and watch the video. rqt_image_viewを立ち上げて映像をみます。"
#~ msgstr ""

#~ msgid "Instructions for Creating an AWS RoboMaker Environment for Mini Pupper"
#~ msgstr ""

#~ msgid ""
#~ "Refer to https://github.com/mangdangroboticsclub/aws-"
#~ "robomaker-mini-pupper-"
#~ "application/blob/master/README.md ."
#~ msgstr ""

#~ msgid "Software"
#~ msgstr "ソフトウェア"

#~ msgid "Software setup for the basic functions. 基本機能のソフトウェアセットアップ。"
#~ msgstr ""

#~ msgid "1. Software Setup ソフトウェアセットアップ"
#~ msgstr ""

#~ msgid "USB keyboardUSB キーボード"
#~ msgstr ""

#~ msgid "HDMI DisplayHDMI ディスプレイ"
#~ msgstr ""

#~ msgid "HDMI microHDMI convertorHDMI⇔microHDMI変換"
#~ msgstr ""

#~ msgid "Step 1.1 Startup raspberry pi ラズパイの起動"
#~ msgstr ""

#~ msgid ""
#~ "Connect the Raspberry pi to the "
#~ "display with a microHDMI cable. "
#~ "ラズパイとディスプレイの間をmicroHDMIケーブルで繋ぐ"
#~ msgstr ""

#~ msgid ""
#~ "Connect a USB keyboard and mouse "
#~ "to the Raspberry pi. USBのキーボードとマウスをラズパイに繋ぐ"
#~ msgstr ""

#~ msgid ""
#~ "Press and hold the button on the"
#~ " bottom of the Mini Pupper to "
#~ "start Raspberry pi for three seconds."
#~ " Mini Pupperの底にあるボタンを3秒長押しして、起動します。"
#~ msgstr ""

#~ msgid ""
#~ "If you can see Ubuntu running on"
#~ " your screen, you have succeeded. You"
#~ " should also see the face on "
#~ "Mini Pupper display. If you don't "
#~ "see both screen, then you have "
#~ "followed the instructions incorrectly. "
#~ "画面にUbuntuの起動している様子が映れば成功です。さらに、Mini "
#~ "Pupperの画面も表示されます。もし表示されない場合は、これまで行った手順に誤りがあります。"
#~ msgstr ""

#~ msgid "Step 1.2  Log in ログイン"
#~ msgstr ""

#~ msgid "Press ubuntu on the purple screen to log in. 紫の画面でubuntuを押してログインします。"
#~ msgstr ""

#~ msgid "Default username / 初期ユーザ名:ubuntu"
#~ msgstr ""

#~ msgid "Default password / 初期パスワード：mangdang"
#~ msgstr ""

#~ msgid "You should change your password. パスワードは各自変更しましょう。"
#~ msgstr ""

#~ msgid "Step 1.3  Set keyboard キーボードの設定"
#~ msgstr ""

#~ msgid ""
#~ "If you are using a Japanese "
#~ "keyboard, you will need this setting."
#~ " Press the menu button in the "
#~ "bottom left corner and type settings "
#~ "to bring up settings. "
#~ "日本語キーボードを使ってる場合、この設定が必要です。左下のメニューボタンを押し、 settings "
#~ "とタイプして設定を起動します。"
#~ msgstr ""

#~ msgid ""
#~ "Select Region & Language and press "
#~ "+ for Input Sources. On the screen"
#~ " that comes up, select the three "
#~ "dots for other and type Japanese "
#~ "to select it. Type Japanese to "
#~ "select it. Region & Language を選択し、Input"
#~ " Sourcesの＋を押します。出てきた画面で点3つを選ぶとotherが出るので、 Japanese "
#~ "とタイプして選択します。English(US)はゴミ箱マークを押して消してしまってもOKです。"
#~ msgstr ""

#~ msgid "Step 1.4  Enable wifi Wifiの有効化"
#~ msgstr ""

#~ msgid ""
#~ "Press the menu button at the "
#~ "bottom left and type terminal to "
#~ "start the terminal. In the terminal, "
#~ "open the configuration file. 左下のメニューボタンを押し、"
#~ " terminal とタイプしてターミナルを起動します。ターミナルで、設定ファイルを開きます。"
#~ msgstr ""

#~ msgid ""
#~ "Type # to enable disabled wifi on"
#~ " syscfg.txt. syscfg.txtにはdtoverlay=disable-"
#~ "wifiと書かれているので、#を付けてコメントアウトします。"
#~ msgstr ""

#~ msgid "Reboot Ubuntu to enable wifi. ここで一度再起動して、設定を反映しましょう。"
#~ msgstr ""

#~ msgid ""
#~ "When you start up again, open "
#~ "settings and set up your wifi "
#~ "settings. Choose your wifi access point"
#~ " SSID and enter your password. "
#~ "再び起動したら、settingsを開いてWifiの設定をします。自分のWifiアクセスポイントのSSIDを選び、パスワードを入れましょう。"
#~ msgstr ""

#~ msgid ""
#~ "Type ip a. See and make a "
#~ "note of IP address. This will be"
#~ " necessary when you connect to your"
#~ " PC via ssh. The configuration within"
#~ " Ubuntu is now complete. ターミナルで ip"
#~ " a "
#~ "とタイプし、ラズパイに割り振られたIPアドレスを確認します。PCからsshで接続するときに必要になるのでメモしておきましょう。Ubuntu内の設定はこれで完了です。"
#~ msgstr ""

#~ msgid "Step 1.5 Open ports for ssh / ssh接続のためのポート開放"
#~ msgstr ""

#~ msgid ""
#~ "Attempt to make an ssh connection "
#~ "from your PC to Ubuntu. "
#~ "PCからUbuntuにssh接続を試みます。"
#~ msgstr ""

#~ msgid ""
#~ "If you are unable to make an "
#~ "ssh connection from your PC, you "
#~ "will need to configure the following,"
#~ " maybe. PCからssh接続できない場合、下記の設定が必要です。"
#~ msgstr ""

#~ msgid ""
#~ "If firewall is not running, do the"
#~ " following. もしファイアーウォールが起動してないと言われたら以下を実行します。"
#~ msgstr ""

#~ msgid "2. calibration キャリブレーション"
#~ msgstr ""

#~ msgid "Step 2.1 Leg servos"
#~ msgstr ""

#~ msgid ""
#~ "The first step is to make the "
#~ "Mini Pupper stand up, so that legs"
#~ " touch the floor. まずMini "
#~ "Pupperのすべての脚が床に触れるように立たせます。"
#~ msgstr ""

#~ msgid ""
#~ "Double-click on the Calibration Tool "
#~ "icon on your desktop to launch it."
#~ " Note that the legs will move "
#~ "when you run above python script. "
#~ "デスクトップのCalibration Toolアイコンをダブルクリックして起動します。アプリを起動したら、脚が動くので注意です。"
#~ msgstr ""

#~ msgid ""
#~ "Next, for each leg, move the Thigh"
#~ " and Calf bars so that they are"
#~ " at a 45 degree angle. The "
#~ "angle of the legs will change in"
#~ " conjunction with the position of the"
#~ " slide bar on the screen. However,"
#~ " if it does not move, then the"
#~ " steps you have followed are "
#~ "incorrect. 次に、それぞれの脚について、ThighとCalfのバーを動かし、45度の角度になるように調整します。要は"
#~ " ＞ ＞ "
#~ "の形にします。画面のスライドバーの位置に連動して脚の角度が変化します。しかし、動かない場合は、これまで行った手順に誤りがあります。"
#~ msgstr ""

#~ msgid ""
#~ "You can use the iPhone's tilt "
#~ "sensor app, a ruler or a "
#~ "protractor to measure the angle. I "
#~ "also used a ruler and a "
#~ "protractor. iPhoneの傾斜センサーアプリ、定規、分度器を使用して角度を測定できます。"
#~ msgstr ""

#~ msgid ""
#~ "It is not enough to measure the"
#~ " inclination of the legs, so it "
#~ "is important to place the legs on"
#~ " a grid, like a piece of graph"
#~ " paper, to check that they are "
#~ "in the same position from front to"
#~ " back and from side to side, "
#~ "and to make any final adjustments. "
#~ "傾きの測定だけでは脚の位置が揃わないので、方眼紙のようなマス目に脚を置いて、前後左右の位置が一致しているか、確認し最終調整しましょう。"
#~ msgstr ""

#~ msgid ""
#~ "When all legs are at 45° "
#~ "inclination as shown, press Update to"
#~ " save the settings. Press × to "
#~ "close the calibration application. "
#~ "すべての脚を図のように45度の傾きになったら、Update "
#~ "を押して設定を保存します。×ボタンを押してキャリブレーションアプリを閉じます。"
#~ msgstr ""

#~ msgid ""
#~ "As a tip, the calibration requires "
#~ "GUI and could not be done via "
#~ "ssh. 補足ですが、キャリブレーションはGUIが必要なのでsshでは実行出来ませんでした。"
#~ msgstr ""

#~ msgid ""
#~ "※ For the latest image file of "
#~ "the Ubuntu21.10, the target angles of"
#~ " legs are shown as below. Ubuntu "
#~ "21.10の最新のイメージファイルの場合、脚の目標角度は次のようになります。"
#~ msgstr ""

#~ msgid "Step 2.2 Connect PS4 controller Playstation4コントローラの接続"
#~ msgstr ""

#~ msgid "Please check the next chapter. 次の章を参照ください。"
#~ msgstr ""

#~ msgid ""
#~ "If you can control it with a "
#~ "ps4 controller, it's OK. ps4コントローラで操作できればOKです。"
#~ msgstr ""

#~ msgid "Step 2.3 Shutdown Raspberry pi & Ubuntu ラズパイ&Ubuntuのシャットダウン"
#~ msgstr ""

#~ msgid ""
#~ "You will need to shut down on "
#~ "Ubuntu. If you have a screen + "
#~ "keyboard connected, type the following "
#~ "command directly, or if not, type "
#~ "the following command from your PC "
#~ "via ssh connection. "
#~ "下面にあるボタン長押しで突然電源供給を止めると、SDカードが破壊されるリスクがあります。Ubuntu上でシャットダウンする必要があります。画面＋キーボードを接続しているなら直接、繋いでいないならPCからssh接続で下記のコマンドを打ちます。"
#~ msgstr ""

#~ msgid ""
#~ "Note that a broken SD card will"
#~ " not be restored... It's a bit "
#~ "of a pain, but you can end "
#~ "it with a command. After about 30"
#~ " seconds, it will shut down and "
#~ "you can press and hold the button"
#~ " on the bottom to turn it off."
#~ " "
#~ "壊れたSDカードは元に戻りません…。面倒ですが、コマンドで終了しましょう。30秒ほどすればシャットダウン完了しますので、底面のボタンを長押しして電源を止めます。"
#~ msgstr ""

#~ msgid ""
#~ "You can shutdown Ubuntu by pressing "
#~ "and holding the triangle button. "
#~ "△ボタンを長押しでUbuntuをシャットダウンできます。"
#~ msgstr ""

#~ msgid "Step 5.8 Top plate and supports"
#~ msgstr "頭部固定準備"

#~ msgid "Step 5.9 Fan"
#~ msgstr ""

#~ msgid "Step 5.10 Raspberry Pi 4"
#~ msgstr ""

